<?xml version="1.0" ?><policyDefinitionResources revision="1.0" schemaVersion="1.0"><displayName/><description/><resources><stringTable><string id="SUPPORTED_WINXPSP2">Microsoft Windows XP SP2 or later</string><string id="googlechromeos">Google Chrome OS</string><string id="googlechromeos_recommended">Google Chrome OS - Default Settings (users can override)</string><string id="Accessibility_group">Accessibility settings</string><string id="ShowAccessibilityOptionsInSystemTrayMenu">Show accessibility options in system tray menu</string><string id="ShowAccessibilityOptionsInSystemTrayMenu_Explain">If this policy is set to true, Accessibility options always appear in system tray menu.

If this policy is set to false, Accessibility options never appear in system tray menu.

If you set this policy, users cannot change or override it.

If this policy is left unset, Accessibility options will not appear in the system tray menu, but the user can cause the Accessibility options to appear via the Settings page.</string><string id="LargeCursorEnabled">Enable large cursor</string><string id="LargeCursorEnabled_Explain">Enable the large cursor accessibility feature.

If this policy is set to true, the large cursor will always be enabled.

If this policy is set to false, the large cursor will always be disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, the large cursor is disabled initially but can be enabled by the user anytime.</string><string id="SpokenFeedbackEnabled">Enable spoken feedback</string><string id="SpokenFeedbackEnabled_Explain">Enable the spoken feedback accessibility feature.

If this policy is set to true, spoken feedback will always be enabled.

If this policy is set to false, spoken feedback will always be disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, spoken feedback is disabled initially but can be enabled by the user anytime.</string><string id="HighContrastEnabled">Enable high contrast mode</string><string id="HighContrastEnabled_Explain">Enable the high contrast mode accessibility feature.

If this policy is set to true, high contrast mode will always be enabled.

If this policy is set to false, high contrast mode will always be disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, high contrast mode is disabled initially but can be enabled by the user anytime.</string><string id="VirtualKeyboardEnabled">Enable on-screen keyboard</string><string id="VirtualKeyboardEnabled_Explain">Enable the on-screen keyboard accessibility feature.

If this policy is set to true, the on-screen keyboard will always be enabled.

If this policy is set to false, the on-screen keyboard will always be disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, the on-screen keyboard is disabled initially but can be enabled by the user anytime.</string><string id="KeyboardDefaultToFunctionKeys">Media keys default to function keys</string><string id="KeyboardDefaultToFunctionKeys_Explain">Changes the default behaviour of the top row keys to function keys.

If this policy is set to true, the keyboard's top row of keys will produce function key commands per default. The search key has to be pressed to revert their behavior back to media keys.

If this policy is set to false or left unset, the keyboard will produce media key commands per default and function key commands when the search key is held.</string><string id="ScreenMagnifierType">Set screen magnifier type</string><string id="ScreenMagnifierType_Explain">If this policy is set, it controls the type of screen magnifier that is enabled. Setting the policy to &quot;None&quot; disables the screen magnifier.

If you set this policy, users cannot change or override it.

If this policy is left unset, the screen magnifier is disabled initially but can be enabled by the user anytime.</string><string id="ScreenMagnifierType_None">Screen magnifier disabled</string><string id="ScreenMagnifierType_Full-screen">Full-screen magnifier enabled</string><string id="DeviceLoginScreenDefaultLargeCursorEnabled">Set default state of the large cursor on the login screen</string><string id="DeviceLoginScreenDefaultLargeCursorEnabled_Explain">Set the default state of the large cursor accessibility feature on the login screen.

If this policy is set to true, the large cursor will be enabled when the login screen is shown.

If this policy is set to false, the large cursor will be disabled when the login screen is shown.

If you set this policy, users can temporarily override it by enabling or disabling the large cursor. However, the user's choice is not persistent and the default is restored whenever the login screen is shown anew or the user remains idle on the login screen for a minute.

If this policy is left unset, the large cursor is disabled when the login screen is first shown. Users can enable or disable the large cursor anytime and its status on the login screen is persisted between users.</string><string id="DeviceLoginScreenDefaultSpokenFeedbackEnabled">Set the default state of spoken feedback on the login screen</string><string id="DeviceLoginScreenDefaultSpokenFeedbackEnabled_Explain">Set the default state of the spoken feedback accessibility feature on the login screen.

If this policy is set to true, spoken feedback will be enabled when the login screen is shown.

If this policy is set to false, spoken feedback will be disabled when the login screen is shown.

If you set this policy, users can temporarily override it by enabling or disabling spoken feedback. However, the user's choice is not persistent and the default is restored whenever the login screen is shown anew or the user remains idle on the login screen for a minute.

If this policy is left unset, spoken feedback is disabled when the login screen is first shown. Users can enable or disable spoken feedback anytime and its status on the login screen is persisted between users.</string><string id="DeviceLoginScreenDefaultHighContrastEnabled">Set the default state of high contrast mode on the login screen</string><string id="DeviceLoginScreenDefaultHighContrastEnabled_Explain">Set the default state of the high contrast mode accessibility feature on the login screen.

If this policy is set to true, high contrast mode will be enabled when the login screen is shown.

If this policy is set to false, high contrast mode will be disabled when the login screen is shown.

If you set this policy, users can temporarily override it by enabling or disabling high contrast mode. However, the user's choice is not persistent and the default is restored whenever the login screen is shown anew or the user remains idle on the login screen for a minute.

If this policy is left unset, high contrast mode is disabled when the login screen is first shown. Users can enable or disable high contrast mode anytime and its status on the login screen is persisted between users.</string><string id="DeviceLoginScreenDefaultVirtualKeyboardEnabled">Set default state of the on-screen keyboard on the login screen</string><string id="DeviceLoginScreenDefaultVirtualKeyboardEnabled_Explain">Set the default state of the on-screen keyboard accessibility feature on the login screen.

If this policy is set to true, the on-screen keyboard will be enabled when the login screen is shown.

If this policy is set to false, the on-screen keyboard will be disabled when the login screen is shown.

If you set this policy, users can temporarily override it by enabling or disabling the on-screen keyboard. However, the user's choice is not persistent and the default is restored whenever the login screen is shown anew or the user remains idle on the login screen for a minute.

If this policy is left unset, the on-screen keyboard is disabled when the login screen is first shown. Users can enable or disable the on-screen keyboard anytime and its status on the login screen is persisted between users.</string><string id="DeviceLoginScreenDefaultScreenMagnifierType">Set the default screen magnifier type enabled on the login screen</string><string id="DeviceLoginScreenDefaultScreenMagnifierType_Explain">Set the default type of screen magnifier that is enabled on the login screen.

If this policy is set, it controls the type of screen magnifier that is enabled when the login screen is shown. Setting the policy to &quot;None&quot; disables the screen magnifier.

If you set this policy, users can temporarily override it by enabling or disabling the screen magnifier. However, the user's choice is not persistent and the default is restored whenever the login screen is shown anew or the user remains idle on the login screen for a minute.

If this policy is left unset, the screen magnifier is disabled when the login screen is first shown. Users can enable or disable the screen magnifier anytime and its status on the login screen is persisted between users.</string><string id="DeviceLoginScreenDefaultScreenMagnifierType_None">Screen magnifier disabled</string><string id="DeviceLoginScreenDefaultScreenMagnifierType_Full-screen">Full-screen magnifier enabled</string><string id="Drive_group">Configure Google Drive options</string><string id="DriveDisabled">Disables Drive in the Google Chrome OS Files app</string><string id="DriveDisabled_Explain">Disables Google Drive syncing in the Google Chrome OS Files app when set to True. In that case, no data is uploaded to Google Drive.

If not set or set to False, then users will be able to transfer files to Google Drive.</string><string id="DriveDisabledOverCellular">Disables Google Drive over cellular connections in the Google Chrome OS Files app</string><string id="DriveDisabledOverCellular_Explain">Disables Google Drive syncing in the Google Chrome OS Files app when using a cellular connection when set to True. In that case, data is only synced to Google Drive when connected via WiFi or Ethernet.

If not set or set to False, then users will be able to transfer files to Google Drive via cellular connections.</string><string id="RemoteAccess_group">Configure remote access options</string><string id="RemoteAccessHostClientDomainList">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostClientDomainList_Explain">Configures the required client domain names that will be imposed on remote access clients and prevents users from changing it.

If this setting is enabled, then only clients from one of the specified domains can connect to the host.

If this setting is disabled or not set, then the default policy for the connection type is applied. For remote assistance, this allows clients from any domain to connect to the host; for anytime remote access, only the host owner can connect.

This setting will override RemoteAccessHostClientDomain, if present.

See also RemoteAccessHostDomainList.</string><string id="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostFirewallTraversal">Enable firewall traversal from remote access host</string><string id="RemoteAccessHostFirewallTraversal_Explain">Enables usage of STUN servers when remote clients are trying to establish a connection to this machine.

If this setting is enabled, then remote clients can discover and connect to this machines even if they are separated by a firewall.

If this setting is disabled and outgoing UDP connections are filtered by the firewall, then this machine will only allow connections from client machines within the local network.

If this policy is left not set the setting will be enabled.</string><string id="RemoteAccessHostDomainList">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostDomainList_Explain">Configures the required host domain names that will be imposed on remote access hosts and prevents users from changing it.

If this setting is enabled, then hosts can be shared only using accounts registered on one of the specified domain names.

If this setting is disabled or not set, then hosts can be shared using any account.

This setting will override RemoteAccessHostDomain, if present.

See also RemoteAccessHostClientDomainList.</string><string id="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostTalkGadgetPrefix">Configure the TalkGadget prefix for remote access hosts</string><string id="RemoteAccessHostTalkGadgetPrefix_Explain">Configures the TalkGadget prefix that will be used by remote access hosts and prevents users from changing it.

If specified, this prefix is prepended to the base TalkGadget name to create a full domain name for the TalkGadget. The base TalkGadget domain name is '.talkgadget.google.com'.

If this setting is enabled, then hosts will use the custom domain name when accessing the TalkGadget instead of the default domain name.

If this setting is disabled or not set, then the default TalkGadget domain name ('chromoting-host.talkgadget.google.com') will be used for all hosts.

Remote access clients are not affected by this policy setting. They will always use 'chromoting-client.talkgadget.google.com' to access the TalkGadget.</string><string id="RemoteAccessHostRequireCurtain">Enable curtaining of remote access hosts</string><string id="RemoteAccessHostRequireCurtain_Explain">Enables curtaining of remote access hosts while a connection is in progress.

If this setting is enabled, then hosts' physical input and output devices are disabled while a remote connection is in progress.

If this setting is disabled or not set, then both local and remote users can interact with the host when it is being shared.</string><string id="RemoteAccessHostAllowClientPairing">Enable or disable PIN-less authentication for remote access hosts</string><string id="RemoteAccessHostAllowClientPairing_Explain">If this setting is enabled or not configured, then users can opt to pair clients and hosts at connection time, eliminating the need to enter a PIN every time.

If this setting is disabled, then this feature will not be available.</string><string id="RemoteAccessHostAllowGnubbyAuth">Allow gnubby authentication for remote access hosts</string><string id="RemoteAccessHostAllowGnubbyAuth_Explain">If this setting is enabled, then gnubby authentication requests will be proxied across a remote host connection.

If this setting is disabled or not configured, gnubby authentication requests will not be proxied.</string><string id="RemoteAccessHostAllowRelayedConnection">Enable the use of relay servers by the remote access host</string><string id="RemoteAccessHostAllowRelayedConnection_Explain">Enables usage of relay servers when remote clients are trying to establish a connection to this machine.

If this setting is enabled, then remote clients can use relay servers to connect to this machine when a direct connection is not available (e.g. due to firewall restrictions).

Note that if the policy RemoteAccessHostFirewallTraversal is disabled, this policy will be ignored.

If this policy is left not set the setting will be enabled.</string><string id="RemoteAccessHostUdpPortRange">Restrict the UDP port range used by the remote access host</string><string id="RemoteAccessHostUdpPortRange_Explain">Restricts the UDP port range used by the remote access host in this machine.

If this policy is left not set, or if it is set to an empty string, the remote access host will be allowed to use any available port, unless the policy RemoteAccessHostFirewallTraversal is disabled, in which case the remote access host will use UDP ports in the 12400-12409 range.</string><string id="RemoteAccessHostMatchUsername">Requires that the name of the local user and the remote access host owner match</string><string id="RemoteAccessHostMatchUsername_Explain">If this setting is enabled, then the remote access host compares the name of the local user (that the host is associated with) and the name of the Google account registered as the host owner (i.e. &quot;johndoe&quot; if the host is owned by &quot;johndoe@example.com&quot; Google account).  The remote access host will not start if the name of the host owner is different from the name of the local user that the host is associated with.  RemoteAccessHostMatchUsername policy should be used together with RemoteAccessHostDomain to also enforce that the Google account of the host owner is associated with a specific domain (i.e. &quot;example.com&quot;).

If this setting is disabled or not set, then the remote access host can be associated with any local user.</string><string id="RemoteAccessHostTokenUrl">URL where remote access clients should obtain their authentication token</string><string id="RemoteAccessHostTokenUrl_Explain">If this policy is set, the remote access host will require authenticating clients to obtain an authentication token from this URL in order to connect. Must be used in conjunction with RemoteAccessHostTokenValidationUrl.

This feature is currently disabled server-side.</string><string id="RemoteAccessHostTokenValidationUrl">URL for validating remote access client authentication token</string><string id="RemoteAccessHostTokenValidationUrl_Explain">If this policy is set, the remote access host will use this URL to validate authentication tokens from remote access clients, in order to accept connections. Must be used in conjunction with RemoteAccessHostTokenUrl.

This feature is currently disabled server-side.</string><string id="RemoteAccessHostTokenValidationCertificateIssuer">Client certificate for connecting to RemoteAccessHostTokenValidationUrl</string><string id="RemoteAccessHostTokenValidationCertificateIssuer_Explain">If this policy is set, the host will use a client certificate with the given issuer CN to authenticate to RemoteAccessHostTokenValidationUrl. Set it to &quot;*&quot; to use any available client certificate.

This feature is currently disabled server-side.</string><string id="ContentSettings_group">Content Settings</string><string id="DefaultCookiesSetting">Default cookies setting</string><string id="DefaultCookiesSetting_Explain">Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.

If this policy is set to 'Keep cookies for the duration of the session' then cookies will be cleared when the session closes. Note that if Google Chrome is running in 'background mode', the session may not close when the last window is closed. Please see the 'BackgroundModeEnabled' policy for more information about configuring this behavior.

If this policy is left not set, 'AllowCookies' will be used and the user will be able to change it.</string><string id="DefaultCookiesSetting_AllowCookies">Allow all sites to set local data</string><string id="DefaultCookiesSetting_BlockCookies">Do not allow any site to set local data</string><string id="DefaultCookiesSetting_SessionOnly">Keep cookies for the duration of the session</string><string id="DefaultImagesSetting">Default images setting</string><string id="DefaultImagesSetting_Explain">Allows you to set whether websites are allowed to display images. Displaying images can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'AllowImages' will be used and the user will be able to change it.</string><string id="DefaultImagesSetting_AllowImages">Allow all sites to show all images</string><string id="DefaultImagesSetting_BlockImages">Do not allow any site to show images</string><string id="DefaultJavaScriptSetting">Default JavaScript setting</string><string id="DefaultJavaScriptSetting_Explain">Allows you to set whether websites are allowed to run JavaScript. Running JavaScript can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'AllowJavaScript' will be used and the user will be able to change it.</string><string id="DefaultJavaScriptSetting_AllowJavaScript">Allow all sites to run JavaScript</string><string id="DefaultJavaScriptSetting_BlockJavaScript">Do not allow any site to run JavaScript</string><string id="DefaultPluginsSetting">Default Flash setting</string><string id="DefaultPluginsSetting_Explain">Allows you to set whether websites are allowed to automatically run the Flash plugin. Automatically running the Flash plugin can be either allowed for all websites or denied for all websites.

Click to play allows the Flash plugin to run but the user must click on the placeholder to start its execution.

If this policy is left not set, the user will be able to change this setting manually.</string><string id="DefaultPluginsSetting_AllowPlugins">Allow all sites to automatically run the Flash plugin</string><string id="DefaultPluginsSetting_BlockPlugins">Block the Flash plugin</string><string id="DefaultPluginsSetting_ClickToPlay">Click to play</string><string id="DefaultPopupsSetting">Default popups setting</string><string id="DefaultPopupsSetting_Explain">Allows you to set whether websites are allowed to show pop-ups. Showing popups can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'BlockPopups' will be used and the user will be able to change it.</string><string id="DefaultPopupsSetting_AllowPopups">Allow all sites to show pop-ups</string><string id="DefaultPopupsSetting_BlockPopups">Do not allow any site to show popups</string><string id="DefaultNotificationsSetting">Default notification setting</string><string id="DefaultNotificationsSetting_Explain">Allows you to set whether websites are allowed to display desktop notifications. Displaying desktop notifications can be allowed by default, denied by default or the user can be asked every time a website wants to show desktop notifications.

If this policy is left not set, 'AskNotifications' will be used and the user will be able to change it.</string><string id="DefaultNotificationsSetting_AllowNotifications">Allow sites to show desktop notifications</string><string id="DefaultNotificationsSetting_BlockNotifications">Do not allow any site to show desktop notifications</string><string id="DefaultNotificationsSetting_AskNotifications">Ask every time a site wants to show desktop notifications</string><string id="DefaultGeolocationSetting">Default geolocation setting</string><string id="DefaultGeolocationSetting_Explain">Allows you to set whether websites are allowed to track the users' physical location. Tracking the users' physical location can be allowed by default, denied by default or the user can be asked every time a website requests the physical location.

If this policy is left not set, 'AskGeolocation' will be used and the user will be able to change it.</string><string id="DefaultGeolocationSetting_AllowGeolocation">Allow sites to track the users' physical location</string><string id="DefaultGeolocationSetting_BlockGeolocation">Do not allow any site to track the users' physical location</string><string id="DefaultGeolocationSetting_AskGeolocation">Ask whenever a site wants to track the users' physical location</string><string id="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_Explain">Allows you to set whether websites are allowed to get access to nearby Bluetooth devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to nearby Bluetooth devices.

If this policy is left not set, '3' will be used, and the user will be able to change it.</string><string id="DefaultWebBluetoothGuardSetting_BlockWebBluetooth">Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_AskWebBluetooth">Allow sites to ask the user to grant access to a nearby Bluetooth device</string><string id="AutoSelectCertificateForUrls">Automatically select client certificates for these sites</string><string id="AutoSelectCertificateForUrls_Explain">Allows you to specify a list of url patterns that specify sites for which Google Chrome should automatically select a client certificate, if the site requests a certificate.

The value must be an array of stringified JSON dictionaries. Each dictionary must have the form { &quot;pattern&quot;: &quot;$URL_PATTERN&quot;, &quot;filter&quot; : $FILTER }, where $URL_PATTERN is a content setting pattern. $FILTER restricts from which client certificates the browser will automatically select. Independent of the filter, only certificates will be selected that match the server's certificate request. If $FILTER has the form { &quot;ISSUER&quot;: { &quot;CN&quot;: &quot;$ISSUER_CN&quot; } }, additionally only client certificates are selected that are issued by a certificate with the CommonName $ISSUER_CN. If $FILTER is the empty dictionary {}, the selection of client certificates is not additionally restricted.

If this policy is left not set, no auto-selection will be done for any site.</string><string id="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</string><string id="CookiesAllowedForUrls">Allow cookies on these sites</string><string id="CookiesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to set cookies.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultCookiesSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="CookiesAllowedForUrlsDesc">Allow cookies on these sites</string><string id="CookiesBlockedForUrls">Block cookies on these sites</string><string id="CookiesBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to set cookies.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultCookiesSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="CookiesBlockedForUrlsDesc">Block cookies on these sites</string><string id="CookiesSessionOnlyForUrls">Allow session only cookies on these sites</string><string id="CookiesSessionOnlyForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to set session only cookies.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultCookiesSetting' policy if it is set, or the user's personal configuration otherwise.

Note that if Google Chrome is running in 'background mode', the session may not be closed when the last browser window is closed, but will instead stay active until the browser exits. Please see the 'BackgroundModeEnabled' policy for more information about configuring this behavior.

If the &quot;RestoreOnStartup&quot; policy is set to restore URLs from previous sessions this policy will not be respected and cookies will be stored permanently for those sites.</string><string id="CookiesSessionOnlyForUrlsDesc">Allow session only cookies on these sites</string><string id="ImagesAllowedForUrls">Allow images on these sites</string><string id="ImagesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display images.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultImagesSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="ImagesAllowedForUrlsDesc">Allow images on these sites</string><string id="ImagesBlockedForUrls">Block images on these sites</string><string id="ImagesBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display images.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultImagesSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="ImagesBlockedForUrlsDesc">Block images on these sites</string><string id="JavaScriptAllowedForUrls">Allow JavaScript on these sites</string><string id="JavaScriptAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to run JavaScript.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultJavaScriptSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</string><string id="JavaScriptBlockedForUrls">Block JavaScript on these sites</string><string id="JavaScriptBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to run JavaScript.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultJavaScriptSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</string><string id="PluginsAllowedForUrls">Allow the Flash plugin on these sites</string><string id="PluginsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to run the Flash plugin.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPluginsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</string><string id="PluginsBlockedForUrls">Block the Flash plugin on these sites</string><string id="PluginsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to run the Flash plugin.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPluginsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</string><string id="PopupsAllowedForUrls">Allow popups on these sites</string><string id="PopupsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to open popups.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPopupsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="PopupsAllowedForUrlsDesc">Allow popups on these sites</string><string id="RegisteredProtocolHandlers">Register protocol handlers</string><string id="RegisteredProtocolHandlers_Explain">Allows you to register a list of protocol handlers. This can only be a recommended policy. The property |protocol| should be set to the scheme such as 'mailto' and the property |url| should be set to the URL pattern of the application that handles the scheme. The pattern can include a '%s', which if present will be replaced by the handled URL.

The protocol handlers registered by policy are merged with the ones registered by the user and both are available for use. The user can override the protocol handlers installed by policy by installing a new default handler, but cannot remove a protocol handler registered by policy.</string><string id="PopupsBlockedForUrls">Block popups on these sites</string><string id="PopupsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to open popups.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPopupsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="PopupsBlockedForUrlsDesc">Block popups on these sites</string><string id="NotificationsAllowedForUrls">Allow notifications on these sites</string><string id="NotificationsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display notifications.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultNotificationsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</string><string id="NotificationsBlockedForUrls">Block notifications on these sites</string><string id="NotificationsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display notifications.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultNotificationsSetting' policy if it is set, or the user's personal configuration otherwise.</string><string id="NotificationsBlockedForUrlsDesc">Block notifications on these sites</string><string id="DefaultSearchProvider_group">Default search provider</string><string id="DefaultSearchProviderEnabled">Enable the default search provider</string><string id="DefaultSearchProviderEnabled_Explain">Enables the use of a default search provider.

If you enable this setting, a default search is performed when the user types text in the omnibox that is not a URL.

You can specify the default search provider to be used by setting the rest of the default search policies. If these are left empty, the user can choose the default provider.

If you disable this setting, no search is performed when the user enters non-URL text in the omnibox.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, the default search provider is enabled, and the user will be able to set the search provider list.

This policy is not available on Windows instances that are not joined
to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="DefaultSearchProviderName">Default search provider name</string><string id="DefaultSearchProviderName_Explain">Specifies the name of the default search provider. If left empty or not set, the host name specified by the search URL will be used.

This policy is only considered if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderKeyword">Default search provider keyword</string><string id="DefaultSearchProviderKeyword_Explain">Specifies the keyword, which is the shortcut used in the omnibox to trigger the search for this provider.

This policy is optional. If not set, no keyword will activate the search provider.

This policy is only considered if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderSearchURL">Default search provider search URL</string><string id="DefaultSearchProviderSearchURL_Explain">Specifies the URL of the search engine used when doing a default search. The URL should contain the string '{searchTerms}', which will be replaced at query time by the terms the user is searching for.

Google's search URL can be specified as: '{google:baseURL}search?q={searchTerms}&amp;{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:searchClient}{google:sourceId}{google:instantExtendedEnabledParameter}ie={inputEncoding}'.

This option must be set when the 'DefaultSearchProviderEnabled' policy is enabled and will only be respected if this is the case.</string><string id="DefaultSearchProviderSuggestURL">Default search provider suggest URL</string><string id="DefaultSearchProviderSuggestURL_Explain">Specifies the URL of the search engine used to provide search suggestions. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.

This policy is optional. If not set, no suggest URL will be used.

Google's suggest URL can be specified as: '{google:baseURL}complete/search?output=chrome&amp;q={searchTerms}'.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderInstantURL">Default search provider instant URL</string><string id="DefaultSearchProviderInstantURL_Explain">Specifies the URL of the search engine used to provide instant results. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.

This policy is optional. If not set, no instant search results will be provided.

Google's instant results URL can be specified as: '{google:baseURL}suggest?q={searchTerms}'.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderIconURL">Default search provider icon</string><string id="DefaultSearchProviderIconURL_Explain">Specifies the favorite icon URL of the default search provider.

This policy is optional. If not set, no icon will be present for the search provider.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderEncodings">Default search provider encodings</string><string id="DefaultSearchProviderEncodings_Explain">Specifies the character encodings supported by the search provider. Encodings are code page names like UTF-8, GB2312, and ISO-8859-1. They are tried in the order provided.

This policy is optional. If not set, the default will be used which is UTF-8.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderEncodingsDesc">Default search provider encodings</string><string id="DefaultSearchProviderAlternateURLs">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderAlternateURLs_Explain">Specifies a list of alternate URLs that can be used to extract search terms from the search engine. The URLs should contain the string '{searchTerms}', which will be used to extract the search terms.

This policy is optional. If not set, no alternate urls will be used to extract search terms.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderSearchTermsReplacementKey">Parameter controlling search term placement for the default search provider</string><string id="DefaultSearchProviderSearchTermsReplacementKey_Explain">If this policy is set and a search URL suggested from the omnibox contains this parameter in the query string or in the fragment identifier, then the suggestion will show the search terms and search provider instead of the raw search URL.

This policy is optional. If not set, no search term replacement will be performed.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderImageURL">Parameter providing search-by-image feature for the default search provider</string><string id="DefaultSearchProviderImageURL_Explain">Specifies the URL of the search engine used to provide image search. Search requests will be sent using the GET method. If the DefaultSearchProviderImageURLPostParams policy is set then image search requests will use the POST method instead.

This policy is optional. If not set, no image search will be used.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderNewTabURL">Default search provider new tab page URL</string><string id="DefaultSearchProviderNewTabURL_Explain">Specifies the URL that a search engine uses to provide a new tab page.

This policy is optional. If not set, no new tab page will be provided.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderSearchURLPostParams">Parameters for search URL which uses POST</string><string id="DefaultSearchProviderSearchURLPostParams_Explain">Specifies the parameters used when searching a URL with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.

This policy is optional. If not set, search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderSuggestURLPostParams">Parameters for suggest URL which uses POST</string><string id="DefaultSearchProviderSuggestURLPostParams_Explain">Specifies the parameters used when doing suggestion search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.

This policy is optional. If not set, suggest search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderInstantURLPostParams">Parameters for instant URL which uses POST</string><string id="DefaultSearchProviderInstantURLPostParams_Explain">Specifies the parameters used when doing instant search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.

This policy is optional. If not set, instant search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="DefaultSearchProviderImageURLPostParams">Parameters for image URL which uses POST</string><string id="DefaultSearchProviderImageURLPostParams_Explain">Specifies the parameters used when doing image search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {imageThumbnail} in above example, it will be replaced with real image thumbnail data.

This policy is optional. If not set, image search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.</string><string id="Extensions_group">Extensions</string><string id="ExtensionInstallBlacklist">Configure extension installation blacklist</string><string id="ExtensionInstallBlacklist_Explain">Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if blacklisted, without a way for the user to enable them. Once an extension disabled due to the blacklist is removed from it, it will automatically get re-enabled.

A blacklist value of '*' means all extensions are blacklisted unless they are explicitly listed in the whitelist.

If this policy is left not set the user can install any extension in Google Chrome.</string><string id="ExtensionInstallBlacklistDesc">Configure extension installation blacklist</string><string id="ExtensionInstallWhitelist">Configure extension installation whitelist</string><string id="ExtensionInstallWhitelist_Explain">Allows you to specify which extensions are not subject to the blacklist.

A blacklist value of * means all extensions are blacklisted and users can only install extensions listed in the whitelist.

By default, all extensions are whitelisted, but if all extensions have been blacklisted by policy, the whitelist can be used to override that policy.</string><string id="ExtensionInstallWhitelistDesc">Configure extension installation whitelist</string><string id="ExtensionInstallForcelist">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallForcelist_Explain">Specifies a list of apps and extensions that are installed silently,
without user interaction, and which cannot be uninstalled nor
disabled by the user. All permissions requested by the
apps/extensions are granted implicitly, without user interaction,
including any additional permissions requested by future versions of
the app/extension. Furthermore, permissions are granted for the
enterprise.deviceAttributes and enterprise.platformKeys extension
APIs. (These two APIs are not available to apps/extensions that are
not force-installed.)

This policy takes precedence over a potentially conflicting ExtensionInstallBlacklist policy. If an app or extension that previously had been force-installed is removed from this list, it is automatically uninstalled by Google Chrome.

For Windows instances that are not joined to a MicrosoftÂ® Active
DirectoryÂ® domain, forced installation is limited to apps and
extensions listed in the Chrome Web Store.

Note that the source code of any extension may be altered by users via Developer Tools (potentially rendering the extension dysfunctional). If this is a concern, the DeveloperToolsDisabled policy should be set.

Each list item of the policy is a string that contains an extension ID and an &quot;update&quot; URL separated by a semicolon (;). The extension ID is the 32-letter string found e.g. on chrome://extensions when in developer mode. The &quot;update&quot; URL should point to an Update Manifest XML document as described at https://developer.chrome.com/extensions/autoupdate. Note that the &quot;update&quot; URL set in this policy is only used for the initial installation; subsequent updates of the extension employ the update URL indicated in the extension's manifest.

For example, gbchcmhmhahfdphkhkmpfmihenigjmpp;https://clients2.google.com/service/update2/crx installs the Chrome Remote Desktop app from the standard Chrome Web Store &quot;update&quot; URL. For more information about hosting extensions, see: https://developer.chrome.com/extensions/hosting.

If this policy is left not set, no apps or extensions are installed automatically and the user can uninstall any app or extension in Google Chrome.</string><string id="ExtensionInstallForcelistDesc">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallSources">Configure extension, app, and user script install sources</string><string id="ExtensionInstallSources_Explain">Allows you to specify which URLs are allowed to install extensions, apps, and themes.

Starting in Google Chrome 21, it is more difficult to install extensions, apps, and user scripts from outside the Chrome Web Store. Previously, users could click on a link to a *.crx file, and Google Chrome would offer to install the file after a few warnings. After Google Chrome 21, such files must be downloaded and dragged onto the Google Chrome settings page. This setting allows specific URLs to have the old, easier installation flow.

Each item in this list is an extension-style match pattern (see https://developer.chrome.com/extensions/match_patterns). Users will be able to easily install items from any URL that matches an item in this list. Both the location of the *.crx file and the page where the download is started from (i.e. the referrer) must be allowed by these patterns.

ExtensionInstallBlacklist takes precedence over this policy. That is, an extension on the blacklist won't be installed, even if it happens from a site on this list.</string><string id="ExtensionInstallSourcesDesc">Configure extension, app, and user script install sources</string><string id="ExtensionAllowedTypes">Configure allowed app/extension types</string><string id="ExtensionAllowedTypes_Explain">Controls which app/extension types are allowed to be installed and limits runtime access.

This setting white-lists the allowed types of extension/apps that can be installed in Google Chrome and which hosts they can interact with. The value is a list of strings, each of which should be one of the following: &quot;extension&quot;, &quot;theme&quot;, &quot;user_script&quot;, &quot;hosted_app&quot;, &quot;legacy_packaged_app&quot;, &quot;platform_app&quot;. See the Google Chrome extensions documentation for more information on these types.

Note that this policy also affects extensions and apps to be force-installed via ExtensionInstallForcelist.

If this setting is configured, extensions/apps which have a type that is not on the list will not be installed.

If this settings is left not-configured, no restrictions on the acceptable extension/app types are enforced.</string><string id="ExtensionAllowedTypesDesc">Configure allowed app/extension types</string><string id="ExtensionSettings">Extension management settings</string><string id="ExtensionSettings_Explain">Configures extension management settings for Google Chrome.

This policy controls multiple settings, including settings controlled by any existing extension-related policies. This policy will override any legacy policies if both are set.

This policy maps an extension ID or an update URL to its configuration. With an extension ID, configuration will be applied to the specified extension only. A default configuration can be set for the special ID &quot;*&quot;, which will apply to all extensions that don't have a custom configuration set in this policy. With an update URL, configuration will be applied to all extensions with the exact update URL stated in manifest of this extension, as described at https://developer.chrome.com/extensions/autoupdate.

The configuration for each extension (or extensions with same update URL) is another dictionary that can contain the fields documented below.

&quot;installation_mode&quot;: maps to a string indicating the installation mode for the extension. The valid strings are:
* &quot;allowed&quot;: allows the extension to be installed by the user. This is the default behavior.
* &quot;blocked&quot;: blocks installation of the extension.
* &quot;force_installed&quot;: the extension is automatically installed and can't be removed by the user.
* &quot;normal_installed&quot;: the extension is automatically installed but can be disabled by the user.

The &quot;installation_mode&quot; can also be configured for multiple extensions as well, including the &quot;*&quot; extension (as default settings) and extensions with same update URL. Only the &quot;allowed&quot; and &quot;blocked&quot; values can be used in this case.

If the mode is set to &quot;force_installed&quot; or &quot;normal_installed&quot; then an &quot;update_url&quot; must be configured too. Note that the update URL set in this policy is only used for the initial installation; subsequent updates of the extension will use the update URL indicated in the extension's manifest. The update URL should point to an Update Manifest XML document as mentioned above.

&quot;blocked_permissions&quot;: maps to a list of strings indicating the blocked API permissions for the extension. The permissions names are same as the permission strings declared in manifest of extension as described at https://developer.chrome.com/extensions/declare_permissions. This setting also can be configured for &quot;*&quot; extension. If the extension requires a permission which is on the blocklist, it will not be allowed to load. If it contains a blocked permission as optional requirement, it will be handled in the normal way, but requesting conflicting permissions will be declined automatically at runtime.

&quot;allowed_permissions&quot;: similar to &quot;blocked_permissions&quot;, but instead explicitly allow some permissions which might be blocked by global blocked permission list, thus can not be configured for &quot;*&quot; extension. Note that this setting doesn't give granted permissions to extensions automatically.

&quot;minimum_version_required&quot;: maps to a version string. The format of the version string is the same as the one used in extension manifest, as described at https://developer.chrome.com/apps/manifest/version. An extension with a version older than the specified minimum version will be disabled. This applies to force-installed extensions as well.

The following settings can be used only for the default &quot;*&quot; configuration:

&quot;install_sources&quot;: Each item in this list is an extension-style match pattern (https://developer.chrome.com/extensions/match_patterns). Users will be able to easily install items from any URL that matches an item in this list. Both the location of the *.crx file and the page where the download is started from (i.e.  the referrer) must be allowed by these patterns.

&quot;allowed_types&quot;: This setting whitelists the allowed types of extension/apps that can be installed in Google Chrome.  The value is a list of strings, each of which should be one of the following: &quot;extension&quot;, &quot;theme&quot;, &quot;user_script&quot;, &quot;hosted_app&quot;, &quot;legacy_packaged_app&quot;, &quot;platform_app&quot;. See the Google Chrome extensions documentation for more information on these types.
&quot;blocked_install_message&quot;: If a user tries to install an extension, but it is blocked by policy the Chrome Webstore displays a generic error message. This setting allows you to append text to the error message. This could be be used to direct users to your help desk, explain why a particular extension is blocked, or something else. This error message will be truncated if longer than 1000 characters.
&quot;runtime_blocked_hosts&quot;: Accepts a list of hosts that an extension will be blocked from interacting with. This includes injecting javascript, altering and viewing webRequests / webNavigation, viewing and altering cookies. The format is similar to Match Patterns https://developer.chrome.com/extensions/match_patterns except no paths may be defined. e.g. &quot;*://*.example.com&quot;. This also supports effective TLD wildcarding e.g. &quot;*://example.*&quot;.
&quot;runtime_allowed_hosts&quot;: Accepts a list of hosts that an extension can interact with regardless of whether they are listed in &quot;runtime_blocked_hosts&quot;. This is the same format as &quot;runtime_blocked_hosts&quot;.
</string><string id="GoogleCast_group">Google Cast</string><string id="EnableMediaRouter">Enables Google Cast</string><string id="EnableMediaRouter_Explain">If this policy is set to true or is not set, Google Cast will be enabled, and users will be able to launch it from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.

If this policy set to false, Google Cast will be disabled.</string><string id="ShowCastIconInToolbar">Shows the Google Cast toolbar icon</string><string id="ShowCastIconInToolbar_Explain">If this policy is set to true, the Cast toolbar icon will always be shown on the toolbar or the overflow menu, and users will not be able to remove it.

If this policy is set to false or is not set, users will be able to pin or remove the icon via its contextual menu.

If the policy &quot;EnableMediaRouter&quot; is set to false, then this policy's value would have no effect, and the toolbar icon would not be shown.</string><string id="Homepage_group">Home page</string><string id="HomepageLocation">Configure the home page URL</string><string id="HomepageLocation_Explain">Configures the default home page URL in Google Chrome and prevents users from changing it.

The home page is the page opened by the Home button. The pages that open on startup are controlled by the RestoreOnStartup policies.

The home page type can either be set to a URL you specify here or set to the New Tab Page. If you select the New Tab Page, then this policy does not take effect.

If you enable this setting, users cannot change their home page URL in Google Chrome, but they can still choose the New Tab Page as their home page.

Leaving this policy not set will allow the user to choose their home page on their own if HomepageIsNewTabPage is not set too.

This policy is not available on Windows instances that are not joined
to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="HomepageIsNewTabPage">Use New Tab Page as homepage</string><string id="HomepageIsNewTabPage_Explain">Configures the type of the default home page in Google Chrome and prevents users from changing home page preferences. The home page can either be set to a URL you specify or set to the New Tab Page.

If you enable this setting, the New Tab Page is always used for the home page, and the home page URL location is ignored.

If you disable this setting, the user's homepage will never be the New Tab Page, unless its URL is set to 'chrome://newtab'.

If you enable or disable this setting, users cannot change their homepage type in Google Chrome.

Leaving this policy not set will allow the user to choose whether the new tab page is their home page on their own.

This policy is not available on Windows instances that are not joined
to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="NewTabPage_group">New Tab Page</string><string id="NewTabPageLocation">Configure the New Tab page URL</string><string id="NewTabPageLocation_Explain">Configures the default New Tab page URL and prevents users from changing it.

The New Tab page is the page opened when new tabs are created (including the one opened in new windows).

This policy does not decide which pages are to be opened on start up. Those are controlled by the RestoreOnStartup policies. Yet this policy does affect the Home Page if that is set to open the New Tab page, as well as the startup page if that is set to open the New Tab page.

If the policy is not set or left empty the default new tab page is used.

This policy is not available on Windows instances that are not joined to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="PasswordManager_group">Password manager</string><string id="PasswordManagerEnabled">Enable saving passwords to the password manager</string><string id="PasswordManagerEnabled_Explain">If this setting is enabled, users can have Google Chrome memorize passwords and provide them automatically the next time they log in to a site.

If this settings is disabled, users cannot save new passwords but they
may still use passwords that have been saved previously.

If this policy is enabled or disabled, users cannot change or override it in Google Chrome. If this policy is unset, password saving is allowed (but can be turned off by the user).</string><string id="HTTPAuthentication_group">Policies for HTTP authentication</string><string id="AuthSchemes">Supported authentication schemes</string><string id="AuthSchemes_Explain">Specifies which HTTP authentication schemes are supported by Google Chrome.

Possible values are 'basic', 'digest', 'ntlm' and 'negotiate'. Separate multiple values with commas.

If this policy is left not set, all four schemes will be used.</string><string id="DisableAuthNegotiateCnameLookup">Disable CNAME lookup when negotiating Kerberos authentication</string><string id="DisableAuthNegotiateCnameLookup_Explain">Specifies whether the generated Kerberos SPN is based on the canonical DNS name or the original name entered.

If you enable this setting, CNAME lookup will be skipped and the server name will be used as entered.

If you disable this setting or leave it not set, the canonical name of the server will be determined via CNAME lookup.</string><string id="EnableAuthNegotiatePort">Include non-standard port in Kerberos SPN</string><string id="EnableAuthNegotiatePort_Explain">Specifies whether the generated Kerberos SPN should include a non-standard port.

If you enable this setting, and a non-standard port (i.e., a port other than 80 or 443) is entered, it will be included in the generated Kerberos SPN.

If you disable this setting or leave it not set, the generated Kerberos SPN will not include a port in any case.</string><string id="AuthServerWhitelist">Authentication server whitelist</string><string id="AuthServerWhitelist_Explain">Specifies which servers should be whitelisted for integrated authentication. Integrated authentication is only enabled when Google Chrome receives an authentication challenge from a proxy or from a server which is in this permitted list.

Separate multiple server names with commas. Wildcards (*) are allowed.

If you leave this policy not set Google Chrome will try to detect if a server is on the Intranet and only then will it respond to IWA requests.  If a server is detected as Internet then IWA requests from it will be ignored by Google Chrome.</string><string id="AuthNegotiateDelegateWhitelist">Kerberos delegation server whitelist</string><string id="AuthNegotiateDelegateWhitelist_Explain">Servers that Google Chrome may delegate to.

Separate multiple server names with commas. Wildcards (*) are allowed.

If you leave this policy not set Google Chrome will not delegate user credentials even if a server is detected as Intranet.</string><string id="AllowCrossOriginAuthPrompt">Cross-origin HTTP Basic Auth prompts</string><string id="AllowCrossOriginAuthPrompt_Explain">Controls whether third-party sub-content on a page is allowed to pop-up an HTTP Basic Auth dialog box.

Typically this is disabled as a phishing defense. If this policy is not set, this is disabled and third-party sub-content will not be allowed to pop up a HTTP Basic Auth dialog box.</string><string id="PowerManagement_group">Power management</string><string id="LidCloseAction">Action to take when the user closes the lid</string><string id="LidCloseAction_Explain">When this policy is set, it specifies the action that Google Chrome OS takes when the user closes the device's lid.

When this policy is unset, the default action is taken, which is suspend.

If the action is suspend, Google Chrome OS can separately be configured to either lock or not lock the screen before suspending.</string><string id="LidCloseAction_LidCloseActionSuspend">Suspend</string><string id="LidCloseAction_LidCloseActionLogout">Log the user out</string><string id="LidCloseAction_LidCloseActionShutdown">Shut down</string><string id="LidCloseAction_LidCloseActionDoNothing">Do nothing</string><string id="PowerManagementUsesAudioActivity">Specify whether audio activity affects power management</string><string id="PowerManagementUsesAudioActivity_Explain">If this policy is set to True or is unset, the user is not considered to be idle while audio is playing. This prevents the idle timeout from being reached and the idle action from being taken. However, screen dimming, screen off and screen lock will be performed after the configured timeouts, irrespective of audio activity.

If this policy is set to False, audio activity does not prevent the user from being considered idle.</string><string id="PowerManagementUsesVideoActivity">Specify whether video activity affects power management</string><string id="PowerManagementUsesVideoActivity_Explain">If this policy is set to True or is unset, the user is not considered to be idle while video is playing. This prevents the idle delay, screen dim delay, screen off delay and screen lock delay from being reached and the corresponding actions from being taken.

If this policy is set to False, video activity does not prevent the user from being considered idle.</string><string id="PresentationScreenDimDelayScale">Percentage by which to scale the screen dim delay in presentation mode</string><string id="PresentationScreenDimDelayScale_Explain">Specifies the percentage by which the screen dim delay is scaled when the device is in presentation mode.

If this policy is set, it specifies the percentage by which the screen dim delay is scaled when the device is in presentation mode. When the screen dim delay is scaled, the screen off, screen lock and idle delays get adjusted to maintain the same distances from the screen dim delay as originally configured.

If this policy is unset, a default scale factor is used.

The scale factor must be 100% or more. Values that would make the screen dim delay in presentation mode shorter than the regular screen dim delay are not allowed.</string><string id="AllowScreenWakeLocks">Allow screen wake locks</string><string id="AllowScreenWakeLocks_Explain">Specifies whether screen wake locks are allowed. Screen wake locks can be requested by extensions via the power management extension API.

If this policy is set to true or left not set, screen wake locks will be honored for power management.

If this policy is set to false, screen wake lock requests will get ignored.</string><string id="UserActivityScreenDimDelayScale">Percentage by which to scale the screen dim delay if the user becomes active after dimming</string><string id="UserActivityScreenDimDelayScale_Explain">Specifies the percentage by which the screen dim delay is scaled when user activity is observed while the screen is dimmed or soon after the screen has been turned off.

If this policy is set, it specifies the percentage by which the screen dim delay is scaled when user activity is observed while the screen is dimmed or soon after the screen has been turned off. When the dim delay is scaled, the screen off, screen lock and idle delays get adjusted to maintain the same distances from the screen dim delay as originally configured.

If this policy is unset, a default scale factor is used.

The scale factor must be 100% or more.</string><string id="WaitForInitialUserActivity">Wait for initial user activity</string><string id="WaitForInitialUserActivity_Explain">Specifies whether power management delays and the session length limit should only start running after the first user activity has been observed in a session.

If this policy is set to True, power management delays and the session length limit do not start running until after the first user activity has been observed in a session.

If this policy is set to False or left unset, power management delays and the session length limit start running immediately on session start.</string><string id="PowerManagementIdleSettings">Power management settings when the user becomes idle</string><string id="PowerManagementIdleSettings_Explain">This policy controls multiple settings for the power management strategy when the user becomes idle.

There are four types of action:
* The screen will be dimmed if the user remains idle for the time specified by |ScreenDim|.
* The screen will be turned off if the user remains idle for the time specified by |ScreenOff|.
* A warning dialog will be shown if the user remains idle for the time specified by |IdleWarning|, telling the user that the idle action is about to be taken.
* The action specified by |IdleAction| will be taken if the user remains idle for the time specified by |Idle|.

For each of above actions, the delay should be specified in milliseconds, and needs to be set to a value greater than zero to trigger the corresponding action. In case the delay is set to zero, Google Chrome OS will not take the corresponding action.

For each of the above delays, when the length of time is unset, a default value will be used.

Note that |ScreenDim| values will be clamped to be less than or equal to |ScreenOff|, |ScreenOff| and |IdleWarning| will be clamped to be less than or equal to |Idle|.

|IdleAction| can be one of four possible actions:
* |Suspend|
* |Logout|
* |Shutdown|
* |DoNothing|

When the |IdleAction| is unset, the default action is taken, which is suspend.

There are also separate settings for AC power and battery.
</string><string id="ScreenLockDelays">Screen lock delays</string><string id="ScreenLockDelays_Explain">Specifies the length of time without user input after which the screen is locked when running on AC power or battery.

When the length of time is set to a value greater than zero, it represents the length of time that the user must remain idle before Google Chrome OS locks the screen.

When the length of time is set to zero, Google Chrome OS does not lock the screen when the user becomes idle.

When the length of time is unset, a default length of time is used.

The recommended way to lock the screen on idle is to enable screen locking on suspend and have Google Chrome OS suspend after the idle delay. This policy should only be used when screen locking should occur a significant amount of time sooner than suspend or when suspend on idle is not desired at all.

The policy value should be specified in milliseconds. Values are clamped to be less than the idle delay.</string><string id="Proxy_group">Proxy server</string><string id="ProxyMode">Choose how to specify proxy server settings</string><string id="ProxyMode_Explain">Allows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.

If you choose to never use a proxy server and always connect directly, all other options are ignored.

If you choose to use system proxy settings, all other options are ignored.

If you choose to auto detect the proxy server, all other options are ignored.

If you choose fixed server proxy mode, you can specify further options in 'Address or URL of proxy server' and 'Comma-separated list of proxy bypass rules'. Only the HTTP proxy server with the highest priority is available for ARC-apps.

If you choose to use a .pac proxy script, you must specify the URL to the script in 'URL to a proxy .pac file'.

For detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.

If you enable this setting, Google Chrome and ARC-apps ignore all proxy-related options specified from the command line.

Leaving this policy not set will allow the users to choose the proxy settings on their own.</string><string id="ProxyMode_ProxyDisabled">Never use a proxy</string><string id="ProxyMode_ProxyAutoDetect">Auto detect proxy settings</string><string id="ProxyMode_ProxyPacScript">Use a .pac proxy script</string><string id="ProxyMode_ProxyFixedServers">Use fixed proxy servers</string><string id="ProxyMode_ProxyUseSystem">Use system proxy settings</string><string id="ProxyServer">Address or URL of proxy server</string><string id="ProxyServer_Explain">You can specify the URL of the proxy server here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings'.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For more options and detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.</string><string id="ProxyPacUrl">URL to a proxy .pac file</string><string id="ProxyPacUrl_Explain">You can specify a URL to a proxy .pac file here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings'.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.</string><string id="ProxyBypassList">Proxy bypass rules</string><string id="ProxyBypassList_Explain">Google Chrome will bypass any proxy for the list of hosts given here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings'.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For more detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.</string><string id="QuickUnlock_group">Quick unlock policies</string><string id="QuickUnlockModeWhitelist">Configure allowed quick unlock modes</string><string id="QuickUnlockModeWhitelist_Explain">A whitelist controlling which quick unlock modes the user can configure and use to unlock the lock screen.

This value is a list of strings; valid list entries are: &quot;all&quot;, &quot;PIN&quot;. Adding &quot;all&quot; to the list means that every quick unlock mode is available to the user, including ones implemented in the future. Otherwise, only the quick unlock modes present in the list will be available.

For example, to allow every quick unlock mode, use [&quot;all&quot;]. To allow only PIN unlock, use [&quot;PIN&quot;]. To disable all quick unlock modes, use [].

By default, no quick unlock modes are available for managed devices.</string><string id="QuickUnlockModeWhitelistDesc">Configure allowed quick unlock modes</string><string id="QuickUnlockTimeout">Sets how often user has to enter password to use quick unlock</string><string id="QuickUnlockTimeout_Explain">This setting controls how often the lock screen will request the password to be entered in order to continue using quick unlock. Each time the lock screen is entered, if the last password entry was more than this setting, the quick unlock will not be available on entering the lock screen. Should the user stay on the lock screen past this period of time, a password will be requested next time the user enters the wrong code, or re-enters the lock screen, whichever comes first.

If this setting is configured, users using quick unlock will be requested to enter their passwords on the lock screen depending on this setting.

If this setting is not configured, users using quick unlock will be requested to enter their password on the lock screen every day.</string><string id="QuickUnlockTimeout_SixHours">Password entry is required every six hours</string><string id="QuickUnlockTimeout_TweleveHours">Password entry is required every twelve hours</string><string id="QuickUnlockTimeout_Day">Password entry is required every day (24 hours)</string><string id="QuickUnlockTimeout_Week">Password entry is required every week (168 hours)</string><string id="PinUnlockMinimumLength">Sets the minimum length of the lock screen PIN</string><string id="PinUnlockMinimumLength_Explain">If the policy is set, the configured minimal PIN length is
enforced. (The absolute minimum PIN length is 1; values less than 1
are treated as 1.)

If the policy is not set, a minimal PIN length of 6 digits is
enforced. This is the recommended minimum.</string><string id="PinUnlockMaximumLength">Sets the maximum length of the lock screen PIN</string><string id="PinUnlockMaximumLength_Explain">If the policy is set, the configured maximal PIN length is enforced. A value of 0 or less means no maximum length; in that case the user may set a PIN as long as they want. If this setting is less than PinUnlockMinimumLength but greater than 0, the maximum length is the same as the minimum length.

If the policy is not set, no maximum length is enforced.</string><string id="PinUnlockWeakPinsAllowed">Enables users to set weak PINs for the lock screen PIN</string><string id="PinUnlockWeakPinsAllowed_Explain">If false, users will be unable to set PINs which are weak and easy to guess.

Some example weak PINs: PINs containing only one digit (1111), PINs whose digits are increasing by 1 (1234), PINs whose digits are decreasing by 1 (4321), and PINs which are commonly used.

By default, users will get a warning, not error, if the PIN is considered weak.</string><string id="Attestation_group">Remote Attestation</string><string id="AttestationEnabledForUser">Enable remote attestation for the user</string><string id="AttestationEnabledForUser_Explain">If true, the user can use the hardware on Chrome devices to remote attest its identity to the privacy CA via the Enterprise Platform Keys API using chrome.enterprise.platformKeys.challengeUserKey().

If it is set to false, or if it is not set, calls to the API will fail with an error code.</string><string id="AttestationExtensionWhitelist">Extensions allowed to to use the remote attestation API</string><string id="AttestationExtensionWhitelist_Explain">This policy specifies the allowed extensions to use the Enterprise Platform Keys API function chrome.enterprise.platformKeys.challengeUserKey() for remote attestation. Extensions must be added to this list to use the API.

If an extension is not in the list, or the list is not set, the call to the API will fail with an error code.</string><string id="AttestationExtensionWhitelistDesc">Extensions allowed to to use the remote attestation API</string><string id="RestoreOnStartupGroup_group">Startup pages</string><string id="RestoreOnStartup">Action on startup</string><string id="RestoreOnStartup_Explain">Allows you to specify the behavior on startup.

If you choose 'Open New Tab Page' the New Tab Page will always be opened when you start Google Chrome.

If you choose 'Restore the last session', the URLs that were open last time Google Chrome was closed will be reopened and the browsing session will be restored as it was left.
Choosing this option disables some settings that rely on sessions or that perform actions on exit (such as Clear browsing data on exit or session-only cookies).

If you choose 'Open a list of URLs', the list of 'URLs to open on startup' will be opened when a user starts Google Chrome.

If you enable this setting, users cannot change or override it in Google Chrome.

Disabling this setting is equivalent to leaving it not configured. The user will still be able to change it in Google Chrome.

This policy is not available on Windows instances that are not joined
to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="RestoreOnStartup_RestoreOnStartupIsNewTabPage">Open New Tab Page</string><string id="RestoreOnStartup_RestoreOnStartupIsLastSession">Restore the last session</string><string id="RestoreOnStartup_RestoreOnStartupIsURLs">Open a list of URLs</string><string id="RestoreOnStartupURLs">URLs to open on startup</string><string id="RestoreOnStartupURLs_Explain">If 'Open a list of URLs' is selected as the startup action, this allows you to specify the list of URLs that are opened. If left not set no URL will be opened on start up.

This policy only works if the 'RestoreOnStartup' policy is set to 'RestoreOnStartupIsURLs'.

This policy is not available on Windows instances that are not joined
to a MicrosoftÂ® Active DirectoryÂ® domain.</string><string id="RestoreOnStartupURLsDesc">URLs to open on startup</string><string id="AllowDeletingBrowserHistory">Enable deleting browser and download history</string><string id="AllowDeletingBrowserHistory_Explain">Enables deleting browser history and download history in Google Chrome and prevents users from changing this setting.

Note that even with this policy disabled, the browsing and download history are not guaranteed to be retained: users may be able to edit or delete the history database files directly, and the browser itself may expire or archive any or all history items at any time.

If this setting is enabled or not set, browsing and download history can be deleted.

If this setting is disabled, browsing and download history cannot be deleted.</string><string id="AllowDinosaurEasterEgg">Allow Dinosaur Easter Egg Game</string><string id="AllowDinosaurEasterEgg_Explain">Allow users to play dinosaur easter egg game when device is offline.

If this policy is set to False, users will not be able to play the dinosaur easter egg game when device is offline. If this setting is set to True, users are allowed to play the dinosaur game. If this policy is not set, users are not allowed to play the dinosaur easter egg game on enrolled Chrome OS, but are allowed to play it under other circumstances.</string><string id="AllowOutdatedPlugins">Allow running plugins that are outdated</string><string id="AllowOutdatedPlugins_Explain">If you enable this setting, outdated plugins are used as normal plugins.

If you disable this setting, outdated plugins will not be used and users will not be asked for permission to run them.

If this setting is not set, users will be asked for permission to run outdated plugins.</string><string id="AllowScreenLock">Permit locking the screen</string><string id="AllowScreenLock_Explain">If this policy is set to false, users will not be able to lock the screen (only signing out from the user session will be possible). If this setting is set to true or not set, users who authenticated with a password can lock the screen.</string><string id="AllowedDomainsForApps">Define domains allowed to access Google Apps</string><string id="AllowedDomainsForApps_Explain">Enables Google Chrome's restricted log in feature in Google Apps and prevents users from changing this setting.

If you define this setting, the user will only be able to access
Google Apps (such as Gmail) using accounts from the specified domains.

This setting will NOT prevent the user from loging in on a managed device
that requires Google authentication. The user will still be allowed to
sign in to accounts from other domains, but they will receive an error
when trying to use Google Apps with those accounts.

If you leave this setting empty/not-configured, the user will be able to
access Google Apps with any account.

This policy causes the X-GoogApps-Allowed-Domains header to be appended to
all HTTP and HTTPS requests to all google.com domains, as described in
https://support.google.com/a/answer/1668854.

Users cannot change or override this setting.</string><string id="AlternateErrorPagesEnabled">Enable alternate error pages</string><string id="AlternateErrorPagesEnabled_Explain">Enables the use of alternate error pages that are built into Google Chrome (such as 'page not found') and prevents users from changing this setting.

If you enable this setting, alternate error pages are used.

If you disable this setting, alternate error pages are never used.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.</string><string id="AlwaysAuthorizePlugins">Always runs plugins that require authorization</string><string id="AlwaysAuthorizePlugins_Explain">If you enable this setting, plugins that are not outdated always run.

If this setting is disabled or not set, users will be asked for permission to run plugins that require authorization. These are plugins that can compromise security.</string><string id="ArcBackupRestoreEnabled">Enable Android Backup Service</string><string id="ArcBackupRestoreEnabled_Explain">When this policy is set to true, Android app data is uploaded to Android Backup servers and restored from them upon app re-installations for compatible apps.

When this policy is set to false, Android Backup Service will be switched off.

If this setting is configured then users are not able change it themselves.

If this setting is not configured then users are able to turn Android Backup Service on and off in the Android Settings app.</string><string id="ArcCertificatesSyncMode">Set certificate availability for ARC-apps</string><string id="ArcCertificatesSyncMode_Explain">If set to SyncDisabled or not configured, Google Chrome OS certificates are not available for ARC-apps.

If set to CopyCaCerts, all ONC-installed CA certificates with Web TrustBit are available for ARC-apps.</string><string id="ArcCertificatesSyncMode_SyncDisabled">Disable usage of Google Chrome OS certificates to ARC-apps</string><string id="ArcCertificatesSyncMode_CopyCaCerts">Enable Google Chrome OS CA certificates to ARC-apps</string><string id="ArcEnabled">Enable ARC</string><string id="ArcEnabled_Explain">When this policy is set to true, ARC will be enabled for the user
(subject to additional policy settings checks - ARC will still be
unavailable if either ephemeral mode or multiple sign-in is enabled
in the current user session).

If this setting is disabled or not configured then enterprise users are
unable to use ARC.</string><string id="ArcLocationServiceEnabled">Enable Android Google Location Service</string><string id="ArcLocationServiceEnabled_Explain">When this policy is set to true, the Android Google Location Service is enabled. This will allow Android apps to use its data to find the device location, and also will enable submitting of anonymous location data to Google.

When this policy is set to false, Android Google Location Service will be switched off.

If this setting is configured then users are not able change it themselves.

If this setting is not configured then users are able to turn Google Location Service on and off in the Android Settings app.

Note that this policy value may be overridden by the DefaultGeolocationSetting policy, when the latter is set to BlockGeolocation.

This policy is applicable only to the users that are able to run Android apps.</string><string id="ArcPolicy">Configure ARC</string><string id="ArcPolicy_Explain">Specifies a set of policies that will be handed over to the ARC runtime. The value must be valid JSON.

This policy can be used to configure which Android apps are automatically installed on the device:

{
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;applications&quot;: {
&quot;type&quot;: &quot;array&quot;,
&quot;items&quot;: {
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;packageName&quot;: {
&quot;description&quot;: &quot;Android app identifier, e.g. &quot;com.google.android.gm&quot; for Gmail&quot;,
&quot;type&quot;: &quot;string&quot;
},
&quot;installType&quot;: {
&quot;description&quot;: &quot;Specifies how an app is installed. OPTIONAL: The app is not installed automatically, but the user can install it. This is the default if this policy is not specified. PRELOAD: The app is installed automatically, but the user can uninstall it. FORCE_INSTALLED: The app is installed automatically and the user cannot uninstall it. BLOCKED: The app is blocked and cannot be installed. If the app was installed under a previous policy it will be uninstalled.&quot;,
&quot;type&quot;: &quot;string&quot;,
&quot;enum&quot;: [
&quot;OPTIONAL&quot;,
&quot;PRELOAD&quot;,
&quot;FORCE_INSTALLED&quot;,
&quot;BLOCKED&quot;
]
},
&quot;defaultPermissionPolicy&quot;: {
&quot;description&quot;: &quot;Policy for granting permission requests to apps. PERMISSION_POLICY_UNSPECIFIED: Policy not specified. If no policy is specified for a permission at any level, then the `PROMPT` behavior is used by default. PROMPT: Prompt the user to grant a permission. GRANT: Automatically grant a permission. DENY: Automatically deny a permission.&quot;,
&quot;type&quot;: &quot;string&quot;,
&quot;enum&quot;: [
&quot;PERMISSION_POLICY_UNSPECIFIED&quot;,
&quot;PROMPT&quot;,
&quot;GRANT&quot;,
&quot;DENY&quot;
]
},
&quot;managedConfiguration&quot;: {
&quot;description&quot;: &quot;App-specific JSON configuration object with a set of key-value pairs, e.g. '&quot;managedConfiguration&quot;: { &quot;key1&quot;: value1, &quot;key2&quot;: value2 }'. The keys are defined in the app manifest.&quot;,
&quot;type&quot;: &quot;object&quot;
}
}
}
}
}
}

To pin apps to the launcher, see PinnedLauncherApps.</string><string id="AudioCaptureAllowed">Allow or deny audio capture</string><string id="AudioCaptureAllowed_Explain">If enabled or not configured (default), the user will be prompted for
audio capture access except for URLs configured in the
AudioCaptureAllowedUrls list which will be granted access without prompting.

When this policy is disabled, the user will never be prompted and audio
capture only be available to URLs configured in AudioCaptureAllowedUrls.

This policy affects all types of audio inputs and not only the built-in microphone.</string><string id="AudioCaptureAllowedUrls">URLs that will be granted access to audio capture devices without prompt</string><string id="AudioCaptureAllowedUrls_Explain">Patterns in this list will be matched against the security
origin of the requesting URL.  If a match is found, access to audio
capture devices will be granted without prompt.

NOTE: Until version 45, this policy was only supported in Kiosk mode.</string><string id="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</string><string id="AudioOutputAllowed">Allow playing audio</string><string id="AudioOutputAllowed_Explain">When this policy is set to false, audio output will not be available on the device while the user is logged in.

This policy affects all types of audio output and not only the built-in speakers. Audio accessibility features are also inhibited by this policy. Do not enable this policy if a screen reader is required for the user.

If this setting is set to true or not configured then users can use all supported audio outputs on their device.</string><string id="AutoFillEnabled">Enable AutoFill</string><string id="AutoFillEnabled_Explain">Enables Google Chrome's AutoFill feature and allows users to auto complete web forms using previously stored information such as address or credit card information.

If you disable this setting, AutoFill will be inaccessible to users.

If you enable this setting or do not set a value, AutoFill will remain under the control of the user. This will allow them to configure AutoFill profiles and to switch AutoFill on or off at their own discretion.</string><string id="AutofillCreditCardEnabled">Enable AutoFill for credit cards</string><string id="AutofillCreditCardEnabled_Explain">Enables Google Chrome's AutoFill feature and allows users to auto complete credit card and address information in web forms using previously stored information.

If you disable this setting, Autofill will never suggest, or fill credit card information, nor will it save additional credit card information that the user might submit while browsing the web.

If you enable this setting or do not set a value, then user will be able to control the overall autofill feature (incuding credit cards) in the UI.</string><string id="BlockThirdPartyCookies">Block third party cookies</string><string id="BlockThirdPartyCookies_Explain">Enabling this setting prevents cookies from being set by web page elements that are not from the domain that is in the browser's address bar.

Disabling this setting allows cookies to be set by web page elements that are not from the domain that is in the browser's address bar and prevents users from changing this setting.

If this policy is left not set, third party cookies will be enabled but the user will be able to change that.</string><string id="BookmarkBarEnabled">Enable Bookmark Bar</string><string id="BookmarkBarEnabled_Explain">If you enable this setting, Google Chrome will show a bookmark bar.

If you disable this setting, users will never see the bookmark bar.

If you enable or disable this setting, users cannot change or override it in Google Chrome.

If this setting is left not set the user can decide to use this function or not.</string><string id="CaptivePortalAuthenticationIgnoresProxy">Captive portal authentication ignores proxy</string><string id="CaptivePortalAuthenticationIgnoresProxy_Explain">This policy allows Google Chrome OS to bypass any proxy for captive portal authentication.

This policy only takes effect if a proxy is configured (for example through policy, by the user in chrome://settings, or by extensions).

If you enable this setting, any captive portal authentication pages (i.e. all web pages starting from captive portal signin page until Google Chrome detects successful internet connection) will be displayed in a separate window ignoring all policy settings and restrictions for the current user.

If you disable this setting or leave it unset, any captive portal authentication pages will be shown in a (regular) new browser tab, using the current user's proxy settings.</string><string id="CertificateTransparencyEnforcementDisabledForUrls">Disable Certificate Transparency enforcement for a list of URLs</string><string id="CertificateTransparencyEnforcementDisabledForUrls_Explain">Disables enforcing Certificate Transparency requirements to the listed URLs.

This policy allows certificates for the hostnames in the specified URLs to not be disclosed via Certificate Transparency. This allows certificates that would otherwise be untrusted, because they were not properly publicly disclosed, to continue to be used, but makes it harder to detect misissued certificates for those hosts.

A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format. However, because certificates are valid for a given hostname independent of the scheme, port, or path, only the hostname portion of the URL is considered. Wildcard hosts are not supported.

If this policy is not set, any certificate that is required to be disclosed via Certificate Transparency will be treated as untrusted if it is not disclosed according to the Certificate Transparency policy.</string><string id="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</string><string id="ChromeOsLockOnIdleSuspend">Enable lock when the device become idle or suspended</string><string id="ChromeOsLockOnIdleSuspend_Explain">Enable lock when Google Chrome OS devices become idle or suspended.

If you enable this setting, users will be asked for a password to unlock the device from sleep.

If you disable this setting, users will not be asked for a password to unlock the device from sleep.

If you enable or disable this setting, users cannot change or override it.

If the policy is left not set the user can choose whether they want to be asked for password to unlock the device or not.</string><string id="ChromeOsMultiProfileUserBehavior">Control the user behavior in a multiprofile session</string><string id="ChromeOsMultiProfileUserBehavior_Explain">Control the user behavior in a multiprofile session on Google Chrome OS devices.

If this policy is set to 'MultiProfileUserBehaviorUnrestricted', the user can be either primary or secondary user in a multiprofile session.

If this policy is set to 'MultiProfileUserBehaviorMustBePrimary', the user can only be the primary user in a multiprofile session.

If this policy is set to 'MultiProfileUserBehaviorNotAllowed', the user cannot be part of a multiprofile session.

If you set this setting, users cannot change or override it.

If the setting is changed while the user is signed into a multiprofile session, all users in the session will be checked against their corresponding settings. The session will be closed if any one of the users is no longer allowed to be in the session.

If the policy is left not set, the default value 'MultiProfileUserBehaviorMustBePrimary' applies for enterprise-managed users and 'MultiProfileUserBehaviorUnrestricted' will be used for non-managed users.</string><string id="ChromeOsMultiProfileUserBehavior_MultiProfileUserBehaviorUnrestricted">Allow enterprise user to be both primary and secondary  (Default behavior for non-managed users)</string><string id="ChromeOsMultiProfileUserBehavior_MultiProfileUserBehaviorMustBePrimary">Allow enterprise user to be primary multiprofile user only (Default behavior for enterprise-managed users)</string><string id="ChromeOsMultiProfileUserBehavior_MultiProfileUserBehaviorNotAllowed">Do not allow enterprise user to be part of multiprofile (primary or secondary)</string><string id="ChromeOsReleaseChannel">Release channel</string><string id="ChromeOsReleaseChannel_Explain">Specifies the release channel that this device should be locked to.</string><string id="ChromeOsReleaseChannel_StableChannel">Stable channel</string><string id="ChromeOsReleaseChannel_BetaChannel">Beta channel</string><string id="ChromeOsReleaseChannel_DevChannel">Dev channel (may be unstable)</string><string id="ChromeOsReleaseChannelDelegated">Whether the release channel should be configurable by the user</string><string id="ChromeOsReleaseChannelDelegated_Explain">If this policy is set to True and the ChromeOsReleaseChannel policy is not specified then users of the enrolling domain will be allowed to change the release channel of the device. If this policy is set to false the device will be locked in whatever channel it was last set.

The user selected channel will be overridden by the ChromeOsReleaseChannel policy, but if the policy channel is more stable than the one that was installed on the device, then the channel will only switch after the version of the more stable channel reaches a higher version number than the one installed on the device.</string><string id="ComponentUpdatesEnabled">Enables component updates in Google Chrome</string><string id="ComponentUpdatesEnabled_Explain">Enables component updates for all components in Google Chrome when not set or set to True.

If set to False, updates to components are disabled. However, some components are exempt from this policy: updates to any component that does not contain executable code, or does not significantly alter the behavior of the browser, or is critical for its security will not be disabled.
Examples of such components include the certificate revocation lists and safe browsing data.
See https://developers.google.com/safe-browsing for more info on SafeBrowsing.</string><string id="DefaultPrinterSelection">Default printer selection rules</string><string id="DefaultPrinterSelection_Explain">Overrides Google Chrome default printer selection rules.

This policy determines the rules for selecting the default printer in Google Chrome which happens the first time the print function is used with a profile.

When this policy is set, Google Chrome will attempt to find a printer matching all of the specified attributes, and select it as default printer. The first printer found matching the policy is selected, in case of non-unique match any matching printer can be selected, depending on the order printers are discovered.

If this policy is not set or matching printer is not found within the timeout, the printer defaults to built-in PDF printer or no printer selected, when PDF printer is not available.

The value is parsed as JSON object, conforming to the following schema:
{
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;kind&quot;: {
&quot;description&quot;: &quot;Whether to limit the search of the matching printer to a specific set of printers.&quot;,
&quot;type&quot;: {
&quot;enum&quot;: [ &quot;local&quot;, &quot;cloud&quot; ]
}
},
&quot;idPattern&quot;: {
&quot;description&quot;: &quot;Regular expression to match printer id.&quot;,
&quot;type&quot;: &quot;string&quot;
},
&quot;namePattern&quot;: {
&quot;description&quot;: &quot;Regular expression to match printer display name.&quot;,
&quot;type&quot;: &quot;string&quot;
}
}
}

Printers connected to Google Cloud Print are considered &quot;cloud&quot;, the rest of the printers are classified as &quot;local&quot;.
Omitting a field means all values match, for example, not specifying connectivity will cause Print Preview to initiate the discovery of all kinds of printers, local and cloud.
Regular expression patterns must follow the JavaScript RegExp syntax and matches are case sensistive.</string><string id="DeveloperToolsDisabled">Disable Developer Tools</string><string id="DeveloperToolsDisabled_Explain">Disables the Developer Tools and the JavaScript console.

If you enable this setting, the Developer Tools can not be accessed and web-site elements can not be inspected anymore. Any keyboard shortcuts and any menu or context menu entries to open the Developer Tools or the JavaScript Console will be disabled.

Setting this option to disabled or leaving it not set allows the user to use the Developer Tools and the JavaScript console.</string><string id="DeviceAllowBluetooth">Allow bluetooth on device</string><string id="DeviceAllowBluetooth_Explain">If this policy is set to false, Google Chrome OS will disable Bluetooth and the user cannot enable it back.

If this policy is set to true or left unset, the user will be able to enable or disable Bluetooth as they wish.

If this policy is set, the user cannot change or override it.

After enabling Bluetooth, the user must log out and log back in for the changes to take effect (no need for this when disabling Bluetooth).</string><string id="DeviceAllowNewUsers">Allow creation of new user accounts</string><string id="DeviceAllowNewUsers_Explain">Controls whether Google Chrome OS allows new user accounts to be created. If this policy is set to false, users that do not have an account already will not be able to login.

If this policy is set to true or not configured, new user accounts will be allowed to be created provided that DeviceUserWhitelist does not prevent the user from logging in.</string><string id="DeviceAllowRedeemChromeOsRegistrationOffers">Allow users to redeem offers through Chrome OS Registration</string><string id="DeviceAllowRedeemChromeOsRegistrationOffers_Explain">IT admins for enterprise devices can use this flag to control whether to allow users to redeem offers through Chrome OS Registration.

If this policy is set to true or left not set, users will be able to redeem offers through Chrome OS Registration.

If this policy is set to false, user will not be able to redeem offers.</string><string id="DeviceAutoUpdateDisabled">Disables Auto Update</string><string id="DeviceAutoUpdateDisabled_Explain">Disables automatic updates when set to True.

Google Chrome OS devices automatically check for updates when this setting is not configured or set to False.

Warning: It is recommended to keep auto-updates enabled so that users receive software updates and critical security fixes. Turning off auto-updates might leave users at risk.</string><string id="DeviceAutoUpdateP2PEnabled">Auto update p2p enabled</string><string id="DeviceAutoUpdateP2PEnabled_Explain">Specifies whether p2p is to be used for OS update payloads. If set to True, devices will share and attempt to consume update payloads on the LAN, potentially reducing Internet bandwidth usage and congestion. If the update payload is not available on the LAN, the device will fall back to downloading from an update server. If set to False or not configured, p2p will not be used.</string><string id="DeviceBlockDevmode">Block developer mode</string><string id="DeviceBlockDevmode_Explain">Block developer mode.

If this policy is set to True, Google Chrome OS will prevent the device from booting into developer mode. The system will refuse to boot and show an error screen when the developer switch is turned on.

If this policy is unset or set to False, developer mode will remain available for the device.</string><string id="DeviceDataRoamingEnabled">Enable data roaming</string><string id="DeviceDataRoamingEnabled_Explain">Determines whether data roaming should be enabled for the device. If set to true, data roaming is allowed. If left unconfigured or set to false, data roaming will be not available.</string><string id="DeviceEphemeralUsersEnabled">Wipe user data on sign-out</string><string id="DeviceEphemeralUsersEnabled_Explain">Determines whether Google Chrome OS keeps local account data after logout. If set to true, no persistent accounts are kept by Google Chrome OS and all data from the user session will be discarded after logout. If this policy is set to false or not configured, the device may keep (encrypted) local user data.</string><string id="DeviceGuestModeEnabled">Enable guest mode</string><string id="DeviceGuestModeEnabled_Explain">If this policy is set to true or not configured, Google Chrome OS will enable guest logins. Guest logins are anonymous user sessions and do not require a password.

If this policy is set to false, Google Chrome OS will not allow guest sessions to be started.</string><string id="DeviceLoginScreenAppInstallList">Configure the list of installed apps on the login screen</string><string id="DeviceLoginScreenAppInstallList_Explain">
Specifies a list of apps that are installed silently on the login screen,
without user interaction, and which cannot be uninstalled.
All permissions requested by the apps are granted
implicitly, without user interaction, including any additional
permissions requested by future versions of the app.

Note that, for security and privacy reasons, extensions are not allowed to be installed using this policy. Moreover, the devices on the Stable channel will only install the apps that belong to the whitelist bundled into Google Chrome. Any items that don't conform to these conditions will be ignored.

If an app that previously had been force-installed is removed from this list, it is automatically uninstalled by Google Chrome.

Each list item of the policy is a string that contains an extension ID and an &quot;update&quot; URL separated by a semicolon (;). The extension ID is the 32-letter string found e.g. on chrome://extensions when in developer mode. The &quot;update&quot; URL should point to an Update Manifest XML document as described at https://developer.chrome.com/extensions/autoupdate. Note that the &quot;update&quot; URL set in this policy is only used for the initial installation; subsequent updates of the extension employ the update URL indicated in the extension's manifest.

For example, gbchcmhmhahfdphkhkmpfmihenigjmpp;https://clients2.google.com/service/update2/crx installs the Chrome Remote Desktop app from the standard Chrome Web Store &quot;update&quot; URL. For more information about hosting extensions, see: https://developer.chrome.com/extensions/hosting.</string><string id="DeviceLoginScreenAppInstallListDesc">Configure the list of installed apps on the login screen</string><string id="DeviceLoginScreenInputMethods">Device sign-in screen keyboard layouts</string><string id="DeviceLoginScreenInputMethods_Explain">Configures which keyboard layouts are allowed on the Google Chrome OS sign-in screen.

If this policy is set to a list of input method identifiers, the given input methods will be available on the sign-in screen. The first given input method will be preselected. While a user pod is focused on the sign-in screen, the user's last used input method will be available in addition to the input methods given by this policy. If this policy is not set, the input methods on the sign-in screen will be derived from the locale in which the sign-in screen is displayed. Values which are not valid input method identifiers will be ignored.</string><string id="DeviceLoginScreenInputMethodsDesc">Device sign-in screen keyboard layouts</string><string id="DeviceLoginScreenLocales">Device sign-in screen locale</string><string id="DeviceLoginScreenLocales_Explain">Configures the locale which is enforced on the Google Chrome OS sign-in screen.

If this policy is set, the sign-in screen will always be displayed in the locale which is given by the first value of this policy (the policy is defined as a list for forward compatibility).  If this policy is not set or is set to an empty list, the sign-in screen will be displayed in the locale of the last user session.  If this policy is set to a value which is not a valid locale, the sign-in screen will be displayed in a fallback locale (currently, en-US).</string><string id="DeviceLoginScreenLocalesDesc">Device sign-in screen locale</string><string id="DeviceLoginScreenPowerManagement">Power management on the login screen</string><string id="DeviceLoginScreenPowerManagement_Explain">Configure power management on the login screen in Google Chrome OS.

This policy lets you configure how Google Chrome OS behaves when there is no user activity for some amount of time while the login screen is being shown. The policy controls multiple settings. For their individual semantics and value ranges, see the corresponding policies that control power management within a session. The only deviations from these policies are:
* The actions to take on idle or lid close cannot be to end the session.
* The default action taken on idle when running on AC power is to shut down.

If a setting is left unspecified, a default value is used.

If this policy is unset, defaults are used for all settings.</string><string id="DeviceMetricsReportingEnabled">Enable metrics reporting</string><string id="DeviceMetricsReportingEnabled_Explain">Controls whether usage metrics and diagnostic data, including crash reports, are reported back to Google. If set to true, Google Chrome OS will report usage metrics and diagnostic data. If not configured or set to false, metrics and diagnostic data reporting will be disabled.</string><string id="DeviceNativePrinters">Enterprise printer configuration file for devices</string><string id="DeviceNativePrinters_Explain">Provides configurations for enterprise printers bound to devices.

This policy allows you to provide printer configurations to Google Chrome OS devices. The size of the file must not exceed 5MB and must be encoded in JSON. The format is the same as the NativePrinters dictionary.  It is estimated that a file containing approximately 21,000 printers will encode as a 5MB file.  The cryptographic hash is used to verify the integrity of the download.

The file is downloaded and cached. It will be re-downloaded whenever the URL or the hash changes.

If this policy is set, Google Chrome OS will download the file for printer configurations and make printers available in accordance with DeviceNativePrintersAccessMode, DeviceNativePrintersWhitelist, and DeviceNativePrintersBlacklist.

This policy has no effect on whether users can configure printers on individual devices.  It is intended to be supplementary to the configuration of printers by individual users.

This policy is additive to the NativePrintersBulkConfiguration.

If this policy is unset, there will be no device printers and the other DeviceNativePrinter* policies will be ignored.</string><string id="DeviceNativePrintersAccessMode">Device printers configuration access policy.</string><string id="DeviceNativePrintersAccessMode_Explain">Controls which printers from the DeviceNativePrinters are available to users.

Designates which access policy is used for bulk printer configuration. If AllowAll is selected, all printers are shown. If BlacklistRestriction is selected, DeviceNativePrintersBlacklist is used to restrict access to the specified printers.  If WhitelistPrintersOnly is selected, DeviceNativePrintersWhitelist designates only those printers which are selectable.

If this policy is not set, BlacklistRestriction is assumed.
</string><string id="DeviceNativePrintersAccessMode_BlacklistRestriction">All printers are shown except those in the blacklist.</string><string id="DeviceNativePrintersAccessMode_WhitelistPrintersOnly">Only printers in the whitelist are shown to users</string><string id="DeviceNativePrintersAccessMode_AllowAll">Allow all printers from the configuration file.</string><string id="DeviceNativePrintersBlacklist">Disabled enterprise device printers</string><string id="DeviceNativePrintersBlacklist_Explain">Specifies the printers which a user cannot use.

This policy is only used if BlacklistRestriction is chosen for DeviceNativePrintersAccessMode.

If this policy is used, all printers are provided to the user except for the ids listed in this policy.
</string><string id="DeviceNativePrintersBlacklistDesc">Disabled enterprise device printers</string><string id="DeviceNativePrintersWhitelist">Enabled enterprise device printers</string><string id="DeviceNativePrintersWhitelist_Explain">Specifies the printers which a user can use.

This policy is only used if WhitelistPrintersOnly is chosen for DeviceNativePrintersAccessMode

If this policy is used, only the printers with ids matching the values in this policy are available to the user. The ids must correspond to the entries in the file specified in DeviceNativePrinters.
</string><string id="DeviceNativePrintersWhitelistDesc">Enabled enterprise device printers</string><string id="DeviceOffHours">Off hours intervals when device OffHours |ignored_policy_proto_tags| are released</string><string id="DeviceOffHours_Explain">If &quot;OffHours&quot; policy is set, then the specified device policies are ignored (use the default settings of these policies) during the defined time intervals. Device policies are re-applied by Chrome on every event when &quot;OffHours&quot; period starts or ends. User will be notified and forced to sign out when &quot;OffHours&quot; time end and device policy settings are changed (e.g. when user is logged in not with an allowed account).</string><string id="DeviceOpenNetworkConfiguration">Device-level network configuration</string><string id="DeviceOpenNetworkConfiguration_Explain">Allows pushing network configuration to be applied for all users of a Google Chrome OS device. The network configuration is a JSON-formatted string as defined by the Open Network Configuration format described at https://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/open-network-configuration</string><string id="DevicePolicyRefreshRate">Refresh rate for Device Policy</string><string id="DevicePolicyRefreshRate_Explain">Specifies the period in milliseconds at which the device management service is queried for device policy information.

Setting this policy overrides the default value of 3 hours. Valid values for this policy are in the range from 1800000 (30 minutes) to 86400000 (1 day). Any values not in this range will be clamped to the respective boundary.

Leaving this policy not set will make Google Chrome OS use the default value of 3 hours.

Note that if the platform supports policy notifications, the refresh delay will be set to 24 hours (ignoring all defaults and the value of this policy) because it is expected that policy notifications will force a refresh automatically whenever policy changes, making more frequent refreshes unnecessary.</string><string id="DeviceQuirksDownloadEnabled">Enable queries to Quirks Server for hardware profiles</string><string id="DeviceQuirksDownloadEnabled_Explain">The Quirks Server provides hardware-specific configuration files, like
ICC display profiles to adjust monitor calibration.

When this policy is set to false, the device will not attempt to
contact the Quirks Server to download configuration files.

If this policy is true or not configured then Google Chrome OS will automatically contact the Quirks Server and download configuration files, if available, and store them on the device.  Such files might, for example, be used to improve display quality of attached monitors.</string><string id="DeviceRebootOnShutdown">Automatic reboot on device shutdown</string><string id="DeviceRebootOnShutdown_Explain">If this policy is set to false or not configured, Google Chrome OS will allow the user to shut down the device.
If this policy is set to true, Google Chrome OS will trigger a reboot when the user shuts down the device. Google Chrome OS replaces all occurrences of shutdown buttons in the UI by reboot buttons. If the user shuts down the device using the power button, it will not automatically reboot, even if the policy is enabled.</string><string id="DeviceShowUserNamesOnSignin">Show usernames on login screen</string><string id="DeviceShowUserNamesOnSignin_Explain">If this policy is set to true or not configured, Google Chrome OS will show existing users on the login screen and allow to pick one.

If this policy is set to false, Google Chrome OS will not show existing users on the login screen. The normal sign-in screen (prompting for the user email and password or phone) or the SAML interstital screen (if enabled via the LoginAuthenticationBehavior policy) will be shown, unless a Public Session is configured. When a Public Session is configured, only the Public Session accounts will be shown, allowing to pick one of them.

Note that this policy does not affect whether the device keeps or discards the local user data.</string><string id="DeviceStartUpFlags">System wide flags to be applied on Google Chrome start-up</string><string id="DeviceStartUpFlags_Explain">Specifies the flags that should be applied to Google Chrome when it starts. The specified flags are applied on the login screen only. Flags set via this policy do not propagate into user sessions.</string><string id="DeviceStartUpFlagsDesc">System wide flags to be applied on Google Chrome start-up</string><string id="DeviceTargetVersionPrefix">Target Auto Update Version</string><string id="DeviceTargetVersionPrefix_Explain">Sets a target version for Auto Updates.

Specifies the prefix of a target version Google Chrome OS should update to. If the device is running a version that's before the specified prefix, it will update to the latest version with the given prefix. If the device is already on a later version, there is no effect (i.e. no downgrades are performed) and the device will remain on the current version. The prefix format works component-wise as is demonstrated in the following example:

&quot;&quot; (or not configured): update to latest version available.
&quot;1412.&quot;: update to any minor version of 1412 (e.g. 1412.24.34 or 1412.60.2)
&quot;1412.2.&quot;: update to any minor version of 1412.2 (e.g. 1412.2.34 or 1412.2.2)
&quot;1412.24.34&quot;: update to this specific version only

Warning: It is not recommended to configure version restrictions as they may prevent users from receiving software updates and critical security fixes. Restricting updates to a specific version prefix might leave users at risk.</string><string id="DeviceUpdateAllowedConnectionTypes">Connection types allowed for updates</string><string id="DeviceUpdateAllowedConnectionTypes_Explain">The types of connections that are allowed to use for OS updates. OS updates potentially put heavy strain on the connection due to their size and may incur additional cost. Therefore, they are by default not enabled for connection types that are considered expensive, which include WiMax, Bluetooth and Cellular at the moment.

The recognized connection type identifiers are &quot;ethernet&quot;, &quot;wifi&quot;, &quot;wimax&quot;, &quot;bluetooth&quot; and &quot;cellular&quot;.</string><string id="DeviceUpdateAllowedConnectionTypesDesc">Connection types allowed for updates</string><string id="DeviceUpdateHttpDownloadsEnabled">Allow autoupdate downloads via HTTP</string><string id="DeviceUpdateHttpDownloadsEnabled_Explain">Auto-update payloads on Google Chrome OS can be downloaded via HTTP instead of HTTPS. This allows transparent HTTP caching of HTTP downloads.

If this policy is set to true, Google Chrome OS will attempt to download auto-update payloads via HTTP. If the policy is set to false or not set, HTTPS will be used for downloading auto-update payloads.</string><string id="DeviceUpdateScatterFactor">Auto update scatter factor</string><string id="DeviceUpdateScatterFactor_Explain">Specifies the number of seconds up to which a device may randomly delay its download of an update from the time the update was first pushed out to the server. The device may wait a portion of this time in terms of wall-clock-time and the remaining portion in terms of the number of update checks. In any case, the scatter is upper bounded to a constant amount of time so that a device does not ever get stuck waiting to download an update forever.</string><string id="DeviceUserWhitelist">Login user white list</string><string id="DeviceUserWhitelist_Explain">Defines the list of users that are allowed to login to the device. Entries are of the form user@domain, such as madmax@managedchrome.com. To allow arbitrary users on a domain, use entries of the form *@domain.

If this policy is not configured, there are no restrictions on which users are allowed to sign in. Note that creating new users still requires the DeviceAllowNewUsers policy to be configured appropriately.</string><string id="DeviceUserWhitelistDesc">Login user white list</string><string id="DeviceWallpaperImage">Device wallpaper image</string><string id="DeviceWallpaperImage_Explain">Configure device-level wallpaper image that is shown on the login screen if no user has yet signed in to the device. The policy is set by specifying the URL from which the Chrome OS device can download the wallpaper image and a cryptographic hash used to verify the integrity of the download. The image must be in JPEG format, its file size must not exceed 16MB. The URL must be accessible without any authentication. The wallpaper image is downloaded and cached. It will be re-downloaded whenever the URL or the hash changes.

The policy should be speicified as a string that expresses the URL and hash in JSON format, e.g.,
{
&quot;url&quot;: &quot;https://example.com/device_wallpaper.jpg&quot;,
&quot;hash&quot;: &quot;examplewallpaperhash&quot;
}

If the device wallpaper policy is set, the Chrome OS device will download and use the wallpaper image on the login screen if no user has yet signed in to the device. Once the user logs in, the user's wallpaper policy kicks in.

If the device wallpaper policy is left not set, it's the user's wallpaper policy to decide what to show if the user's wallpaper policy is set.</string><string id="Disable3DAPIs">Disable support for 3D graphics APIs</string><string id="Disable3DAPIs_Explain">Enabling this setting prevents web pages from accessing the graphics processing unit (GPU). Specifically, web pages can not access the WebGL API and plugins can not use the Pepper 3D API.

Disabling this setting or leaving it not set potentially allows web pages to use the WebGL API and plugins to use the Pepper 3D API. The default settings of the browser may still require command line arguments to be passed in order to use these APIs.

If HardwareAccelerationModeEnabled is set to false, Disable3DAPIs is ignored and it is equivalent to Disable3DAPIs being set to true.</string><string id="DisablePluginFinder">Specify whether the plugin finder should be disabled</string><string id="DisablePluginFinder_Explain">If you set this setting to enabled the automatic search and installation of missing plugins will be disabled in Google Chrome.

Setting this option to disabled or leave it not set the plugin finder will be active.</string><string id="DisableSafeBrowsingProceedAnyway">Disable proceeding from the Safe Browsing warning page</string><string id="DisableSafeBrowsingProceedAnyway_Explain">The Safe Browsing service shows a warning page when users navigate to sites that are flagged as potentially malicious. Enabling this setting prevents users from proceeding anyway from the warning page to the malicious site.

If this setting is disabled or not configured then users can choose to proceed to the flagged site after being shown the warning.

See https://developers.google.com/safe-browsing for more info on SafeBrowsing.</string><string id="DisableScreenshots">Disable taking screenshots</string><string id="DisableScreenshots_Explain">If enabled, screenshots cannot be taken using keyboard shortcuts or extension APIs.

If disabled or not specified, taking screenshots is allowed.</string><string id="DisplayRotationDefault">Set default display rotation, reapplied on every reboot</string><string id="DisplayRotationDefault_Explain">If this policy is set, each display is rotated to the
specified orientation on every reboot, and the first time it is connected
after the policy value has changed. Users may change the display
rotation via the settings page after logging in, but their
setting will be overridden by the policy value at the next reboot.

This policy applies to both the primary and all secondary displays.

If the policy is not set, the default value is 0 degrees and the user is
free to change it. In this case, the default value is not reapplied at
restart.</string><string id="DisplayRotationDefault_ROTATE_0">Rotate screen by 0 degrees</string><string id="DisplayRotationDefault_ROTATE_90">Rotate screen clockwise by 90 degrees</string><string id="DisplayRotationDefault_ROTATE_180">Rotate screen by 180 degrees</string><string id="DisplayRotationDefault_ROTATE_270">Rotate screen clockwise by 270 degrees</string><string id="DownloadDirectory">Set download directory</string><string id="DownloadDirectory_Explain">Configures the directory that Google Chrome will use for downloading files.

If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified one or enabled the flag to be prompted for download location every time.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

If this policy is left not set the default download directory will be used and the user will be able to change it.</string><string id="DownloadRestrictions">Allow download restrictions</string><string id="DownloadRestrictions_Explain">Configures the type of downloads that Google Chrome will completely block, without letting users override the security decision.

If you set this policy, Google Chrome will prevent certain types of downloads, and won't let user bypass the security warnings.

When the 'Block dangerous downloads' option is chosen, all downloads are allowed, except for those that carry SafeBrowsing warnings.

When the 'Block potentially dangerous downloads' option is chosen, all downloads allowed, except for those that carry SafeBrowsing warnings of potentially dangerous downloads.

When the 'Block all downloads' option is chosen, all downloads are blocked.

When this policy is not set, (or the 'No special restrictions' option is chosen), the downloads will go through the usual security restrictions based on SafeBrowsing analysis results.

Note that these restrictions apply to downloads triggered from web page content, as well as the 'download link...' context menu option. These restrictions do not apply to the save / download of the currently displayed page, nor does it apply to saving as PDF from the printing options.

See https://developers.google.com/safe-browsing for more info on SafeBrowsing.</string><string id="DownloadRestrictions_DefaultDownloadSecurity">No special restrictions</string><string id="DownloadRestrictions_BlockDangerousDownloads">Block dangerous downloads</string><string id="DownloadRestrictions_BlockPotentiallyDangerousDownloads">Block potentially dangerous downloads</string><string id="DownloadRestrictions_BlockAllDownloads">Block all downloads</string><string id="EasyUnlockAllowed">Allows Smart Lock to be used</string><string id="EasyUnlockAllowed_Explain">If you enable this setting, users will be allowed to use Smart Lock if the requirements for the feature are satisfied.

If you disable this setting, users will not be allowed to use Smart Lock.

If this policy is left not set, the default is not allowed for enterprise-managed users and allowed for non-managed users.</string><string id="EcryptfsMigrationStrategy">Migration strategy for ecryptfs</string><string id="EcryptfsMigrationStrategy_Explain">Specifies the action that should be taken when the user's home directory was created with ecryptfs encryption and needs to transition to ext4 encryption.

If you set this policy to 'DisallowArc', Android apps will be disabled for the user and no migration from ecryptfs to ext4 encryption will be performed. Android apps will not be prevented from running when the home directory is already ext4-encrypted.

If you set this policy to 'Migrate', ecryptfs-encrypted home directories will be automatically migrated to ext4 encryption on sign-in without asking for user consent.

If you set this policy to 'Wipe', ecryptfs-encrypted home directories will be deleted on sign-in and new ext4-encrypted home directories will be created instead. Warning: This removes the user's local data.

If you set this policy to 'AskUser', users with ecryptfs-encrypted home directories will be offered to migrate.

This policy does not apply to kiosk users. If this policy is left not set, the device will behave as if 'DisallowArc' was chosen.</string><string id="EcryptfsMigrationStrategy_DisallowArc">Disallow data migration and ARC.</string><string id="EcryptfsMigrationStrategy_Migrate">Migrate automatically, donâ€™t ask for user consent.</string><string id="EcryptfsMigrationStrategy_Wipe">Wipe the userâ€™s ecryptfs home directory and start with a fresh ext4-encrypted home directory.</string><string id="EcryptfsMigrationStrategy_AskUser">Ask the user if they would like to migrate or skip migration and disallow ARC.</string><string id="EcryptfsMigrationStrategy_MinimalMigrate">Similar to Wipe (value 2), but tries to preserve login tokens so the user does not have to sign in again.</string><string id="EcryptfsMigrationStrategy_AskForEcryptfsArcUsers">If the client device model already supported ARC before migration to ext4 was necessary to run ARC and if the ArcEnabled policy is set to true, this option will behave as AskUser (value 3). In all other cases (if the device model did not support ARC before, or if ArcEnabled policy is set to false), this value is equivalent to DisallowArc (value 0).</string><string id="EditBookmarksEnabled">Enables or disables bookmark editing</string><string id="EditBookmarksEnabled_Explain">If you enable this setting, bookmarks can be added, removed or modified. This is the default also when this policy is not set.

If you disable this setting, bookmarks can not be added, removed or modified. Existing bookmarks are still available.</string><string id="EnableCommonNameFallbackForLocalAnchors">Whether to allow certificates issued by local trust anchors that are missing the subjectAlternativeName extension</string><string id="EnableCommonNameFallbackForLocalAnchors_Explain">When this setting is enabled, Google Chrome will use the commonName of a server certificate to match a hostname if the certificate is missing a subjectAlternativeName extension, as long as it successfully validates and chains to a locally-installed CA certificates.

Note that this is not recommended, as this may allow bypassing the nameConstraints extension that restricts the hostnames that a given certificate can be authorized for.

If this policy is not set, or is set to false, server certificates that lack a subjectAlternativeName extension containing either a DNS name or IP address will not be trusted.</string><string id="EnableDeprecatedWebPlatformFeatures">Enable deprecated web platform features for a limited time</string><string id="EnableDeprecatedWebPlatformFeatures_Explain">Specify a list of deprecated web platform features to re-enable temporarily.

This policy gives administrators the ability to re-enable deprecated web platform features for a limited time. Features are identified by a string tag and the features corresponding to the tags included in the list specified by this policy will get re-enabled.

If this policy is left not set, or the list is empty or does not match one of the supported string tags, all deprecated web platform features will remain disabled.

While the policy itself is supported on the above platforms, the feature it is enabling may be available on fewer platforms. Not all deprecated Web Platform features can be re-enabled. Only the ones explicitly listed below can be for a limited period of time, which is different per feature. The general format of the string tag will be [DeprecatedFeatureName]_EffectiveUntil[yyyymmdd]. As reference, you can find the intent behind the Web Platform feature changes at https://bit.ly/blinkintents.
</string><string id="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</string><string id="EnableOnlineRevocationChecks">Whether online OCSP/CRL checks are performed</string><string id="EnableOnlineRevocationChecks_Explain">In light of the fact that soft-fail, online revocation checks provide no effective security benefit, they are disabled by default in Google Chrome version 19 and later. By setting this policy to true, the previous behavior is restored and online OCSP/CRL checks will be performed.

If the policy is not set, or is set to false, then Google Chrome will not perform online revocation checks in Google Chrome 19 and later.</string><string id="EnableSha1ForLocalAnchors">Whether SHA-1 signed certificates issued by local trust anchors are allowed</string><string id="EnableSha1ForLocalAnchors_Explain">When this setting is enabled, Google Chrome allows SHA-1 signed certificates as long as they successfully validate and chain to a locally-installed CA certificates.

Note that this policy depends on the operating system certificate verification stack allowing SHA-1 signatures. If an OS update changes the OS handling of SHA-1 certificates, this policy may no longer have effect.  Further, this policy is intended as a temporary workaround to give enterprises more time to move away from SHA-1.  This policy will be removed on or around January 1st 2019.

If this policy is not set, or it is set to false, then Google Chrome follows the publicly announced SHA-1 deprecation schedule.</string><string id="ExternalStorageDisabled">Disable mounting of external storage</string><string id="ExternalStorageDisabled_Explain">When this policy is set to true, external storage will not be available in the file browser.

This policy affects all types of storage media. For example: USB flash drives, external hard drives, SD and other memory cards, optical storage etc. Internal storage is not affected, therefore files saved in the Download folder can still be accessed. Google Drive is also not affected by this policy.

If this setting is disabled or not configured then users can use all supported types of external storage on their device.</string><string id="ExternalStorageReadOnly">Treat external storage devices as read-only</string><string id="ExternalStorageReadOnly_Explain">When this policy is set to true, users cannot write anything to external storage devices.

If this setting is set to false or not configured, then users can create and modify files of external storage devices which are physically writable.

The ExternalStorageDisabled policy takes precedence over this policy - if ExternalStorageDisabled is set to true, then all access to external storage is disabled and this policy is consequently ignored.

Dynamic refresh of this policy is supported in M56 and later.</string><string id="ForceGoogleSafeSearch">Force Google SafeSearch</string><string id="ForceGoogleSafeSearch_Explain">Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.

If you enable this setting, SafeSearch in Google Search is always active.

If you disable this setting or do not set a value, SafeSearch in Google Search is not enforced.</string><string id="ForceMaximizeOnFirstRun">Maximize the first browser window on first run</string><string id="ForceMaximizeOnFirstRun_Explain">If this policy is set to true, Google Chrome will unconditionally maximize the first window shown on first run.
If this policy is set to false or not configured, the decision whether to maximize the first window shown will be based on the screen size.</string><string id="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</string><string id="ForceYouTubeRestrict_Explain">Enforces a minimum Restricted Mode on YouTube and prevents users from
picking a less restricted mode.

If this setting is set to Strict, Strict Restricted Mode on YouTube is always active.

If this setting is set to Moderate, the user may only pick Moderate Restricted Mode
and Strict Restricted Mode on YouTube, but cannot disable Restricted Mode.

If this setting is set to Off or no value is set, Restricted Mode on YouTube is not enforced by Google Chrome. External policies such as YouTube policies might still enforce Restricted Mode, though.</string><string id="ForceYouTubeRestrict_Off">Do not enforce Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Moderate">Enforce at least Moderate Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Strict">Enforce Strict Restricted Mode for YouTube</string><string id="FullscreenAllowed">Allow fullscreen mode</string><string id="FullscreenAllowed_Explain">This policy controls the availability of fullscreen mode in which all Google Chrome UI is hidden and only web content is visible.

If this policy is set to true or not not configured, the user, apps and extensions with appropriate permissions can enter fullscreen mode.

If this policy is set to false, neither the user nor any apps or extensions can enter fullscreen mode.

On all platforms except Google Chrome OS, kiosk mode is unavailable when fullscreen mode is disabled.</string><string id="Http09OnNonDefaultPortsEnabled">Enables HTTP/0.9 support on non-default ports</string><string id="Http09OnNonDefaultPortsEnabled_Explain">This policy enables HTTP/0.9 on ports other than 80 for HTTP and 443 for HTTPS.

This policy is disabled by default, and if enabled, leaves users open to the security issue https://crbug.com/600352.

This policy is intended to give enterprises a chance to migrate exising servers off of HTTP/0.9, and will be removed in the future.

If this policy is not set, HTTP/0.9 will be disabled on non-default ports.</string><string id="IncognitoModeAvailability">Incognito mode availability</string><string id="IncognitoModeAvailability_Explain">Specifies whether the user may open pages in Incognito mode in Google Chrome.

If 'Enabled' is selected or the policy is left unset, pages may be opened in Incognito mode.

If 'Disabled' is selected, pages may not be opened in Incognito mode.

If 'Forced' is selected, pages may be opened ONLY in Incognito mode.</string><string id="IncognitoModeAvailability_Enabled">Incognito mode available</string><string id="IncognitoModeAvailability_Disabled">Incognito mode disabled</string><string id="IncognitoModeAvailability_Forced">Incognito mode forced</string><string id="InstantTetheringAllowed">Allows Instant Tethering to be used.</string><string id="InstantTetheringAllowed_Explain">If this setting is enabled, users will be allowed to use Instant Tethering, which allows their Google phone to share its mobile data with their device.

If this setting is disabled, users will not be allowed to use Instant Tethering.

If this policy is left not set, the default is not allowed for enterprise-managed users and allowed for non-managed users.</string><string id="IsolateOrigins">Enable Site Isolation for specified origins</string><string id="IsolateOrigins_Explain">
NOTE: This policy is experimental and may break functionality!
If the policy is enabled, each of the named origins in a
comma-separated list will run in its own process. This will also isolate
origins named by subdomains; e.g. specifying https://example.com/ will
also cause https://foo.example.com/ to be isolated as part of the
https://example.com/ site.
If the policy is disabled, the pre-Site Isolation process management logic will take effect.
If the policy is not configured, the user will be able to change this setting.
</string><string id="KeyPermissions">Key Permissions</string><string id="KeyPermissions_Explain">Grants access to corporate keys to extensions.

Keys are designated for corporate usage if they're generated using the chrome.enterprise.platformKeys API on a managed account. Keys imported or generated in another way are not designated for corporate usage.

Access to keys designated for corporate usage is solely controlled by this policy. The user can neither grant nor withdraw access to corporate keys to or from extensions.

By default an extension cannot use a key designated for corporate usage, which is equivalent to setting allowCorporateKeyUsage to false for that extension.

Only if allowCorporateKeyUsage is set to true for an extension, it can use any platform key marked for corporate usage to sign arbitrary data. This permission should only be granted if the extension is trusted to secure access to the key against attackers.</string><string id="ManagedBookmarks">Managed Bookmarks</string><string id="ManagedBookmarks_Explain">Configures a list of managed bookmarks.

The policy consists of a list of bookmarks whereas each bookmark is a dictionary containing the keys &quot;name&quot; and &quot;url&quot; which hold the bookmark's name and its target. A subfolder may be configured by defining a bookmark without an &quot;url&quot; key but with an additional &quot;children&quot; key which itself contains a list of bookmarks as defined above (some of which may be folders again). Google Chrome amends incomplete URLs as if they were submitted via the Omnibox, for example &quot;google.com&quot; becomes &quot;https://google.com/&quot;.

These bookmarks are placed in a folder that can't be modified by the user (but the user can choose to hide it from the bookmark bar). By default the folder name is &quot;Managed bookmarks&quot; but it can be customized by adding to the list of bookmarks a dictionary containing the key &quot;toplevel_name&quot; with the desired folder name as the value.

Managed bookmarks are not synced to the user account and can't be modified by extensions.</string><string id="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation</string><string id="MaxInvalidationFetchDelay_Explain">Specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service.

Setting this policy overrides the default value of 5000 milliseconds. Valid values for this policy are in the range from 1000 (1 second) to 300000 (5 minutes). Any values not in this range will be clamped to the respective boundary.

Leaving this policy not set will make Google Chrome use the default value of 5000 milliseconds.</string><string id="NativePrinters">Native Printing</string><string id="NativePrinters_Explain">Configures a list of printers.

This policy allows administrators to provide printer configurations for
their users.

display_name and description are free form strings that can be customized for ease of printer selection. manufacturer and model serve to ease printer identification by end users. They represent the manufacturer and model of the printer. uri should be an address reachable from a client computer including the scheme, port, and queue. uuid is optional.  If provided, it is used to help deduplicate zeroconf printers.

effective_model must match one of the strings which represent a Google Chrome OS supported printer. The string will be used to identify and install the appropriate PPD for the printer. More information can be found at https://support.google.com/chrome?p=noncloudprint.

Printer setup is completed upon the first use of a printer.  PPDs are not
downloaded until the printer is used.  After that time, frequently used
PPDs are cached.

This policy has no effect on whether users can configure printers on
individual devices.  It is intended to be supplementary to the
configuration of printers by individual users.</string><string id="NativePrintersDesc">Native Printing</string><string id="NativePrintersBulkAccessMode">Printer configuration access policy.</string><string id="NativePrintersBulkAccessMode_Explain">Controls which printers from the NativePrintersBulkConfiguration are available to users.

Designates which access policy is used for bulk printer configuration. If AllowAll is selected, all printers are shown. If BlacklistRestriction is selected, NativePrintersBulkBlacklist is used to restrict access to the specified printers.  If WhitelistPrintersOnly is selected, NativePrintersBulkWhitelist designates only those printers which are selectable.

If this policy is not set, BlacklistRestriction is assumed.
</string><string id="NativePrintersBulkAccessMode_BlacklistRestriction">All printers are shown except those in the blacklist.</string><string id="NativePrintersBulkAccessMode_WhitelistPrintersOnly">Only printers in the whitelist are shown to users</string><string id="NativePrintersBulkAccessMode_AllowAll">Allow all printers from the configuration file.</string><string id="NativePrintersBulkBlacklist">Disabled enterprise printers</string><string id="NativePrintersBulkBlacklist_Explain">Specifies the printers which a user cannot use.

This policy is only used if BlacklistRestriction is chosen for NativePrintersBulkAccessMode.

If this policy is used, all printers are provided to the user except for the ids listed in this policy.
</string><string id="NativePrintersBulkBlacklistDesc">Disabled enterprise printers</string><string id="NativePrintersBulkConfiguration">Enterprise printer configuration file</string><string id="NativePrintersBulkConfiguration_Explain">Provides configurations for enterprise printers.

This policy allows you to provide printer configurations to Google Chrome OS devices. The size of the file must not exceed 5MB and must be encoded in JSON.  The format is the same as the NativePrinters dictionary.  It is estimated that a file containing approximately 21,000 printers will encode as a 5MB file.  The cryptographic hash is used to verify the integrity of the download.

The file is downloaded and cached. It will be re-downloaded whenever the URL or the hash changes.

If this policy is set, Google Chrome OS will download the file for printer configurations and make printers available in accordance with NativePrintersBulkAccessMode, NativePrintersBulkWhitelist, and NativePrintersBulkBlacklist.

If you set this policy, users cannot change or override it.

This policy has no effect on whether users can configure printers on individual devices.  It is intended to be supplementary to the configuration of printers by individual users.
</string><string id="NativePrintersBulkWhitelist">Enabled enterprise printers</string><string id="NativePrintersBulkWhitelist_Explain">Specifies the printers which a user can use.

This policy is only used if WhitelistPrintersOnly is chosen for NativePrintersBulkAccessMode.

If this policy is used, only the printers with ids matching the values in this policy are available to the user. The ids must correspond to the entries in the file specified in NativePrintersBulkConfiguration.
</string><string id="NativePrintersBulkWhitelistDesc">Enabled enterprise printers</string><string id="NetworkPredictionOptions">Enable network prediction</string><string id="NetworkPredictionOptions_Explain">Enables network prediction in Google Chrome and prevents users from changing this setting.

This controls DNS prefetching, TCP and SSL preconnection and prerendering of web pages.

If you set this preference to 'always', 'never', or 'WiFi only', users cannot change or override this setting in Google Chrome.

If this policy is left not set, network prediction will be enabled but the user will be able to change it.</string><string id="NetworkPredictionOptions_NetworkPredictionAlways">Predict network actions on any network connection</string><string id="NetworkPredictionOptions_NetworkPredictionWifiOnly">Predict network actions on any network that is not cellular.
(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)</string><string id="NetworkPredictionOptions_NetworkPredictionNever">Do not predict network actions on any network connection</string><string id="NoteTakingAppsLockScreenWhitelist">Whitelist note-taking apps allowed on the Google Chrome OS lock screen</string><string id="NoteTakingAppsLockScreenWhitelist_Explain">Specifies list of apps that can be enabled as a note-taking app on the Google Chrome OS lock screen.

If the preferred note-taking app is enabled on the lock screen, the lock screen will contain UI element for launching the preferred note taking app.
When launched, the app will be able to create an app window on top of the lock screen, and create data items (notes) in the lock screen context. The app will be able to import created notes to the primary user session, when the session is unlocked. Currently, only Chrome note-taking apps are supported on the lock screen.

If the policy is set, the user will be allowed to enable an app on the lock screen only if the app's extension ID is contained in the policy list value.
As a consequence, setting this policy to an empty list will disable note-taking on the lock screen entirely.
Note that the policy containing an app ID does not necessarily mean that the user will be able to enable the app as a note-taking app on the lock screen - for example, on Chrome 61, the set of available apps is additionally restricted by the platform.

If the policy is left unset, there will be no restrictions on the set of apps the user can enable on the lock screen imposed by the policy.</string><string id="NoteTakingAppsLockScreenWhitelistDesc">Whitelist note-taking apps allowed on the Google Chrome OS lock screen</string><string id="OpenNetworkConfiguration">User-level network configuration</string><string id="OpenNetworkConfiguration_Explain">Allows pushing network configuration to be applied per-user to a Google Chrome OS device. The network configuration is a JSON-formatted string as defined by the Open Network Configuration format described at https://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/open-network-configuration</string><string id="PacHttpsUrlStrippingEnabled">Enable PAC URL stripping (for https://)</string><string id="PacHttpsUrlStrippingEnabled_Explain">Strips privacy and security sensitive parts of https:// URLs before passing them on to PAC scripts (Proxy Auto Config) used by Google Chrome during proxy resolution.

When True, the security feature is enabled, and https:// URLs are
stripped before submitting them to a PAC script. In this manner the PAC
script is not able to view data that is ordinarily protected by an
encrypted channel (such as the URL's path and query).

When False, the security feature is disabled, and PAC scripts are
implicitly granted the ability to view all components of an https://
URL. This applies to all PAC scripts regardless of origin (including
those fetched over an insecure transport, or discovered insecurely
through WPAD).

This defaults to True (security feature enabled), except for Chrome OS
enterprise users for which this currently defaults to False.

It is recommended that this be set to True. The only reason to set it to
False is if it causes a compatibility problem with existing PAC scripts.

The desire is to remove this override in the future.</string><string id="PinnedLauncherApps">List of pinned apps to show in the launcher</string><string id="PinnedLauncherApps_Explain">Lists the application identifiers Google Chrome OS shows as pinned apps in the launcher bar.

If this policy is configured, the set of applications is fixed and can't be changed by the user.

If this policy is left unset, the user may change the list of pinned apps in the launcher.</string><string id="PinnedLauncherAppsDesc">List of pinned apps to show in the launcher</string><string id="PolicyRefreshRate">Refresh rate for user policy</string><string id="PolicyRefreshRate_Explain">Specifies the period in milliseconds at which the device management service is queried for user policy information.

Setting this policy overrides the default value of 3 hours. Valid values for this policy are in the range from 1800000 (30 minutes) to 86400000 (1 day). Any values not in this range will be clamped to the respective boundary. If the platform supports policy notifications, the refresh delay will be set to 24 hours because it is expected that policy notifications will force a refresh automatically whenever policy changes.

Leaving this policy not set will make Google Chrome use the default value of 3 hours.

Note that if the platform supports policy notifications, the refresh delay will be set to 24 hours (ignoring all defaults and the value of this policy) because it is expected that policy notifications will force a refresh automatically whenever policy changes, making more frequent refreshes unnecessary.</string><string id="PrintingEnabled">Enable printing</string><string id="PrintingEnabled_Explain">Enables printing in Google Chrome and prevents users from changing this setting.

If this setting is enabled or not configured, users can print.

If this setting is disabled, users cannot print from Google Chrome. Printing is disabled in the wrench menu, extensions, JavaScript applications, etc. It is still possible to print from plugins that bypass Google Chrome while printing. For example, certain Flash applications have the print option in their context menu, which is not covered by this policy.</string><string id="QuicAllowed">Allows QUIC protocol</string><string id="QuicAllowed_Explain">If this policy is set to true or not set usage of QUIC protocol in Google Chrome is allowed.
If this policy is set to false usage of QUIC protocol is disallowed.</string><string id="RebootAfterUpdate">Automatically reboot after update</string><string id="RebootAfterUpdate_Explain">Schedule an automatic reboot after a Google Chrome OS update has been applied.

When this policy is set to true, an automatic reboot is scheduled when a Google Chrome OS update has been applied and a reboot is required to complete the update process. The reboot is scheduled immediately but may be delayed on the device by up to 24 hours if a user is currently using the device.

When this policy is set to false, no automatic reboot is scheduled after applying a Google Chrome OS update. The update process is completed when the user next reboots the device.

If you set this policy, users cannot change or override it.

Note: Currently, automatic reboots are only enabled while the login screen is being shown or a kiosk app session is in progress. This will change in the future and the policy will always apply, regardless of whether a session of any particular type is in progress or not.</string><string id="RequireOnlineRevocationChecksForLocalAnchors">Whether online OCSP/CRL checks are required for local trust anchors</string><string id="RequireOnlineRevocationChecksForLocalAnchors_Explain">When this setting is enabled, Google Chrome will always perform revocation checking for server certificates that successfully validate and are signed by locally-installed CA certificates.

If Google Chrome is unable to obtain revocation status information, such certificates will be treated as revoked ('hard-fail').

If this policy is not set, or it is set to false, then Google Chrome will use the existing online revocation checking settings.</string><string id="RunAllFlashInAllowMode">Extend Flash content setting to all content</string><string id="RunAllFlashInAllowMode_Explain">If you enable this setting, all Flash content embedded on websites that have been set to allow Flash in content settings -- either by the user or by enterprise policy -- will be run, including content from other origins or small content.

To control which websites are allowed to run Flash, see the &quot;DefaultPluginsSetting&quot;, &quot;PluginsAllowedForUrls&quot;, and &quot;PluginsBlockedForUrls&quot; policies.

If this setting is disabled or not set, Flash content from other origins or small content might be blocked.</string><string id="SAMLOfflineSigninTimeLimit">Limit the time for which a user authenticated via SAML can log in offline</string><string id="SAMLOfflineSigninTimeLimit_Explain">During login, Google Chrome OS can authenticate against a server (online) or using a cached password (offline).

When this policy is set to a value of -1, the user can authenticate offline indefinitely. When this policy is set to any other value, it specifies the length of time since the last online authentication after which the user must use online authentication again.

Leaving this policy not set will make Google Chrome OS use a default time limit of 14 days after which the user must use online authentication again.

This policy affects only users who authenticated using SAML.

The policy value should be specified in seconds.</string><string id="SSLErrorOverrideAllowed">Allow proceeding from the SSL warning page</string><string id="SSLErrorOverrideAllowed_Explain">Chrome shows a warning page when users navigate to sites that have SSL errors. By default or when this policy is set to true, users are allowed to click through these warning pages.
Setting this policy to false disallows users to click through any warning page.</string><string id="SSLVersionMax">Maximum SSL version enabled</string><string id="SSLVersionMax_Explain">Warning: The max TLS version policy will be entirely removed from Google Chrome around version 66 (around February 2018).

If this policy is not configured then Google Chrome uses the default maximum version.

Otherwise it may be set to one of the following values: &quot;tls1.2&quot; or &quot;tls1.3&quot;. When set, Google Chrome will not use SSL/TLS versions greater than the specified version. An unrecognized value will be ignored.</string><string id="SSLVersionMax_TLSv1_2">TLS 1.2</string><string id="SSLVersionMax_TLSv1_3">TLS 1.3</string><string id="SafeBrowsingEnabled">Enable Safe Browsing</string><string id="SafeBrowsingEnabled_Explain">Enables Google Chrome's Safe Browsing feature and prevents users from changing this setting.

If you enable this setting, Safe Browsing is always active.

If you disable this setting, Safe Browsing is never active.

If you enable or disable this setting, users cannot change or override the &quot;Enable phishing and malware protection&quot; setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.

See https://developers.google.com/safe-browsing for more info on SafeBrowsing.</string><string id="SafeBrowsingExtendedReportingOptInAllowed">Allow users to opt in to Safe Browsing extended reporting</string><string id="SafeBrowsingExtendedReportingOptInAllowed_Explain">Setting this policy to false stops users from choosing to send some system information and page content to Google servers. If this setting is true or not configured, then users will be allowed to send some system information and page content to Safe Browsing to help detect dangerous apps and sites.

See https://developers.google.com/safe-browsing for more info on SafeBrowsing.</string><string id="SavingBrowserHistoryDisabled">Disable saving browser history</string><string id="SavingBrowserHistoryDisabled_Explain">Disables saving browser history in Google Chrome and prevents users from changing this setting.

If this setting is enabled, browsing history is not saved. This setting also disables tab syncing.

If this setting is disabled or not set, browsing history is saved.</string><string id="SearchSuggestEnabled">Enable search suggestions</string><string id="SearchSuggestEnabled_Explain">Enables search suggestions in Google Chrome's omnibox and prevents users from changing this setting.

If you enable this setting, search suggestions are used.

If you disable this setting, search suggestions are never used.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.</string><string id="SessionLengthLimit">Limit the length of a user session</string><string id="SessionLengthLimit_Explain">When this policy is set, it specifies the length of time after which a user is automatically logged out, terminating the session. The user is informed about the remaining time by a countdown timer shown in the system tray.

When this policy is not set, the session length is not limited.

If you set this policy, users cannot change or override it.

The policy value should be specified in milliseconds. Values are clamped to a range of 30 seconds to 24 hours.</string><string id="SessionLocales">Set the recommended locales for a public session</string><string id="SessionLocales_Explain">Sets one or more recommended locales for a public session, allowing users to easily choose one of these locales.

The user can choose a locale and a keyboard layout before starting a public session. By default, all locales supported by Google Chrome OS are listed in alphabetic order. You can use this policy to move a set of recommended locales to the top of the list.

If this policy is not set, the current UI locale will be pre-selected.

If this policy is set, the recommended locales will be moved to the top of the list and will be visually separated from all other locales. The recommended locales will be listed in the order in which they appear in the policy. The first recommended locale will be pre-selected.

If there is more than one recommended locale, it is assumed that users will want to select among these locales. Locale and keyboard layout selection will be prominently offered when starting a public session. Otherwise, it is assumed that most users will want to use the pre-selected locale. Locale and keyboard layout selection will be less prominently offered when starting a public session.

When this policy is set and automatic login is enabled (see the |DeviceLocalAccountAutoLoginId| and |DeviceLocalAccountAutoLoginDelay| policies), the automatically started public session will use the first recommended locale and the most popular keyboard layout matching this locale.

The pre-selected keyboard layout will always be the most popular layout matching the pre-selected locale.

This policy can only be set as recommended. You can use this policy to move a set of recommended locales to the top but users are always allowed to choose any locale supported by Google Chrome OS for their session.
</string><string id="SessionLocalesDesc">Set the recommended locales for a public session</string><string id="ShelfAutoHideBehavior">Control shelf auto-hiding</string><string id="ShelfAutoHideBehavior_Explain">Control auto-hiding of the Google Chrome OS shelf.

If this policy is set to 'AlwaysAutoHideShelf', the shelf will always auto-hide.

If this policy is set to 'NeverAutoHideShelf', the shelf never auto-hide.

If you set this policy, users cannot change or override it.

If the policy is left not set, users can choose whether the shelf should auto-hide.</string><string id="ShelfAutoHideBehavior_AlwaysAutoHideShelf">Always auto-hide the shelf</string><string id="ShelfAutoHideBehavior_NeverAutoHideShelf">Never auto-hide the shelf</string><string id="ShowHomeButton">Show Home button on toolbar</string><string id="ShowHomeButton_Explain">Shows the Home button on Google Chrome's toolbar.

If you enable this setting, the Home button is always shown.

If you disable this setting, the Home button is never shown.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

Leaving this policy not set will allow the user to choose whether to show the home button.</string><string id="ShowLogoutButtonInTray">Add a logout button to the system tray</string><string id="ShowLogoutButtonInTray_Explain">If enabled, a big, red logout button is shown in the system tray while a session is active and the screen is not locked.

If disabled or not specified, no big, red logout button is shown in the system tray.</string><string id="SitePerProcess">Enable Site Isolation for every site</string><string id="SitePerProcess_Explain">
NOTE: This policy is experimental and may break functionality!
You might want to look at the IsolateOrigins policy setting to get the
best of both worlds, isolation and limited impact for users, by using
IsolateOrigins with a list of the sites you want to isolate. This setting,
SitePerProcess, isolates all sites.
If the policy is enabled, each site will run in its own process.
If the policy is disabled, the pre-Site Isolation process management logic will take effect.
If the policy is not configured, the user will be able to change this setting.
</string><string id="SpellCheckServiceEnabled">Enable or disable spell checking web service</string><string id="SpellCheckServiceEnabled_Explain">Google Chrome can use a Google web service to help resolve spelling errors. If this setting is enabled, then this service is always used. If this setting is disabled, then this service is never used.

Spell checking can still be performed using a downloaded dictionary; this policy only controls the usage of the online service.

If this setting is not configured then users can choose whether the spell checking service should be used or not.</string><string id="SuppressUnsupportedOSWarning">Suppress the unsupported OS warning</string><string id="SuppressUnsupportedOSWarning_Explain">Suppresses the warning that appears when Google Chrome is running on a computer or operating system that is no longer supported.</string><string id="SyncDisabled">Disable synchronization of data with Google</string><string id="SyncDisabled_Explain">Disables data synchronization in Google Chrome using Google-hosted synchronization services and prevents users from changing this setting.

If you enable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set Google Sync will be available for the user to choose whether to use it or not.

To fully disable Google Sync, it is recommended that you disable the Google Sync service in the Google Admin console.

This policy should not be enabled when RoamingProfileSupportEnabled policy is set to enabled as that feature shares the same client side functionality. The Google-hosted synchronization is disabled in this case completely.</string><string id="SystemTimezone">Timezone</string><string id="SystemTimezone_Explain">Specifies the timezone to be used for the device. Users can override the specified timezone for the current session. However, on logout it is set back to the specified timezone. If an invalid value is provided, the policy is still activated using &quot;GMT&quot; instead. If an empty string is provided, the policy is ignored.

If this policy is not used, the currently active timezone will remain in use however users can change the timezone and the change is persistent. Thus a change by one user affects the login-screen and all other users.

New devices start out with the timezone set to &quot;US/Pacific&quot;.

The format of the value follows the names of timezones in the &quot;IANA Time Zone Database&quot; (see &quot;https://en.wikipedia.org/wiki/Tz_database&quot;). In particular, most timezones can be referred to by &quot;continent/large_city&quot; or &quot;ocean/large_city&quot;.

Setting this policy completely disables automatic timezone resolve by device location. It also overrides SystemTimezoneAutomaticDetection policy.</string><string id="SystemTimezoneAutomaticDetection">Configure the automatic timezone detection method</string><string id="SystemTimezoneAutomaticDetection_Explain">When this policy is set, automatic timezone detection flow will be in one of the following ways depending on the value of the setting:

If set to TimezoneAutomaticDetectionUsersDecide, users would be able to control automatic timezone detection using normal controls in chrome://settings.

If set to TimezoneAutomaticDetectionDisabled, automatic timezone controls in chrome://settings will be disabled. Automatic timezone detection will be always off.

If set to TimezoneAutomaticDetectionIPOnly, timezone controls in chrome://settings will be disabled. Automatic timezone detection will be always on. Timezone detection will use IP-only method to resolve location.

If set to TimezoneAutomaticDetectionSendWiFiAccessPoints, timezone controls in chrome://settings will be disabled. Automatic timezone detection will be always on. The list of visible WiFi access-points will be always sent to Geolocation API server for fine-grained timezone detection.

If set to TimezoneAutomaticDetectionSendAllLocationInfo, timezone controls in chrome://settings will be disabled. Automatic timezone detection will be always on. Location information (such as WiFi access-points, reachable Cell Towers, GPS) will be sent to a server for fine-grained timezone detection.

If this policy is not set, it will behave as if TimezoneAutomaticDetectionUsersDecide is set.

If SystemTimezone policy is set, it overrides this policy. In this case automatic timezone detection is completely disabled.</string><string id="SystemTimezoneAutomaticDetection_TimezoneAutomaticDetectionUsersDecide">Let users decide</string><string id="SystemTimezoneAutomaticDetection_TimezoneAutomaticDetectionDisabled">Never auto-detect timezone</string><string id="SystemTimezoneAutomaticDetection_TimezoneAutomaticDetectionIPOnly">Always use coarse timezone detection</string><string id="SystemTimezoneAutomaticDetection_TimezoneAutomaticDetectionSendWiFiAccessPoints">Always send WiFi access-points to server while resolving timezone</string><string id="SystemTimezoneAutomaticDetection_TimezoneAutomaticDetectionSendAllLocationInfo">Always send any available location signals to the server while resolving timezone</string><string id="SystemUse24HourClock">Use 24 hour clock by default</string><string id="SystemUse24HourClock_Explain">Specifies the clock format be used for the device.

This policy configures the clock format to use on the login screen and as a default for user sessions. Users can still override the clock format for their account.

If the policy is set to true, the device will use a 24 hour clock format. If the policy is set to false, the device will use 12 hour clock format.

If this policy is not set, the device will default to a 24 hour clock format.</string><string id="TPMFirmwareUpdateSettings">Configure TPM firmware update behavior</string><string id="TPMFirmwareUpdateSettings_Explain">Configures availability and behavior of TPM firmware update functionality.

Individual settings can be specified in JSON properties:

allow-user-initiated-powerwash: If set to true, users will be able to trigger the powerwash flow to install a TPM firmware update.

If the policy is not set, TPM firmware update functionality will not be available.</string><string id="TaskManagerEndProcessEnabled">Enables ending processes in Task Manager</string><string id="TaskManagerEndProcessEnabled_Explain">If set to false, the 'End process' button is disabled in the Task Manager.

If set to true or not configured, the user can end processes in the Task Manager.</string><string id="TermsOfServiceURL">Set the Terms of Service for a device-local account</string><string id="TermsOfServiceURL_Explain">Sets the Terms of Service that the user must accept before starting a device-local account session.

If this policy is set, Google Chrome OS will download the Terms of Service and present them to the user whenever a device-local account session is starting. The user will only be allowed into the session after accepting the Terms of Service.

If this policy is not set, no Terms of Service are shown.

The policy should be set to a URL from which Google Chrome OS can download the Terms of Service. The Terms of Service must be plain text, served as MIME type text/plain. No markup is allowed.</string><string id="TouchVirtualKeyboardEnabled">Enable virtual keyboard</string><string id="TouchVirtualKeyboardEnabled_Explain">This policy configures enabling the virtual keyboard as an input device on ChromeOS. Users cannot override this policy.

If the policy is set to true, the on-screen virtual keyboard will always be enabled.

If set to false, the on-screen virtual keyboard will always be disabled.

If you set this policy, users cannot change or override it. However, users will still be able to enable/disable an accessibility on-screen keyboard which takes precedence over the virtual keyboard controlled by this policy. See the |VirtualKeyboardEnabled| policy for controlling the accessibility on-screen keyboard.

If this policy is left unset, the on-screen keyboard is disabled initially but can be enabled by the user anytime. Heuristic rules may also be used to decide when to display the keyboard.</string><string id="TranslateEnabled">Enable Translate</string><string id="TranslateEnabled_Explain">Enables the integrated Google Translate service on Google Chrome.

If you enable this setting, Google Chrome will show an integrated toolbar offering to translate the page for the user, when appropriate.

If you disable this setting, users will never see the translation bar.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this setting is left not set the user can decide to use this function or not.</string><string id="URLBlacklist">Block access to a list of URLs</string><string id="URLBlacklist_Explain">This policy prevents the user from loading web pages from blacklisted URLs. The blacklist provides a list of URL patterns that specify which URLs will be blacklisted.

A URL pattern has to be formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.

Exceptions can be defined in the URL whitelist policy. These policies are limited to 1000 entries; subsequent entries will be ignored.

Note that it is not recommended to block internal 'chrome://*' URLs since this may lead to unexpected errors.

If this policy is not set no URL will be blacklisted in the browser.</string><string id="URLBlacklistDesc">Block access to a list of URLs</string><string id="URLWhitelist">Allows access to a list of URLs</string><string id="URLWhitelist_Explain">Allows access to the listed URLs, as exceptions to the URL blacklist.

See the description of the URL blacklist policy for the format of entries of this list.

This policy can be used to open exceptions to restrictive blacklists. For example, '*' can be blacklisted to block all requests, and this policy can be used to allow access to a limited list of URLs. It can be used to open exceptions to certain schemes, subdomains of other domains, ports, or specific paths.

The most specific filter will determine if a URL is blocked or allowed. The whitelist takes precedence over the blacklist.

This policy is limited to 1000 entries; subsequent entries will be ignored.

If this policy is not set there will be no exceptions to the blacklist from the 'URLBlacklist' policy.</string><string id="URLWhitelistDesc">Allows access to a list of URLs</string><string id="UnifiedDesktopEnabledByDefault">Make Unified Desktop available and turn on by default</string><string id="UnifiedDesktopEnabledByDefault_Explain">If this policy is set to true, Unified Desktop is allowed and
enabled by default, which allows applications to span multiple displays.
The user may disable Unified Desktop for individual displays by unchecking
it in the display settings.

If this policy is set to false or unset, Unified Desktop will be
disabled. In this case, the user cannot enable the feature.</string><string id="UsbDetachableWhitelist">Whitelist of USB detachable devices</string><string id="UsbDetachableWhitelist_Explain">Defines the list of USB devices that are allowed to be detached from their kernel driver in order to be used through the chrome.usb API directly inside a web application. Entries are pairs of USB Vendor Identifier and Product Identifier to identify a specific hardware.

If this policy is not configured, the list of a detachable USB devices is empty.</string><string id="UsbDetachableWhitelistDesc">Whitelist of USB detachable devices</string><string id="UserAvatarImage">User avatar image</string><string id="UserAvatarImage_Explain">This policy allows you to configure the avatar image representing the user on the login screen. The policy is set by specifying the URL from which Google Chrome OS can download the avatar image and a cryptographic hash used to verify the integrity of the download. The image must be in JPEG format, its size must not exceed 512kB. The URL must be accessible without any authentication.

The avatar image is downloaded and cached. It will be re-downloaded whenever the URL or the hash changes.

The policy should be specified as a string that expresses the URL and hash in JSON format, conforming to the following schema:
{
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;url&quot;: {
&quot;description&quot;: &quot;The URL from which the avatar image can be downloaded.&quot;,
&quot;type&quot;: &quot;string&quot;
},
&quot;hash&quot;: {
&quot;description&quot;: &quot;The SHA-256 hash of the avatar image.&quot;,
&quot;type&quot;: &quot;string&quot;
}
}
}

If this policy is set, Google Chrome OS will download and use the avatar image.

If you set this policy, users cannot change or override it.

If the policy is left not set, the user can choose the avatar image representing them on the login screen.</string><string id="UserDisplayName">Set the display name for device-local accounts</string><string id="UserDisplayName_Explain">Controls the account name Google Chrome OS shows on the login screen for the corresponding device-local account.

If this policy is set, the login screen will use the specified string in the picture-based login chooser for the corresponding device-local account.

If the policy is left not set, Google Chrome OS will use the device-local account's email account ID as the display name on the login screen.

This policy is ignored for regular user accounts.</string><string id="VideoCaptureAllowed">Allow or deny video capture</string><string id="VideoCaptureAllowed_Explain">If enabled or not configured (default), the user will be prompted for
video capture access except for URLs configured in the
VideoCaptureAllowedUrls list which will be granted access without prompting.

When this policy is disabled, the user will never be prompted and video
capture only be available to URLs configured in VideoCaptureAllowedUrls.

This policy affects all types of video inputs and not only the built-in camera.</string><string id="VideoCaptureAllowedUrls">URLs that will be granted access to video capture devices without prompt</string><string id="VideoCaptureAllowedUrls_Explain">Patterns in this list will be matched against the security
origin of the requesting URL.  If a match is found, access to audio
capture devices will be granted without prompt.

NOTE: Until version 45, this policy was only supported in Kiosk mode.</string><string id="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</string><string id="WPADQuickCheckEnabled">Enable WPAD optimization</string><string id="WPADQuickCheckEnabled_Explain">Allows to turn off WPAD (Web Proxy Auto-Discovery) optimization in Google Chrome.

If this policy is set to false, WPAD optimization is disabled causing Google Chrome to wait longer for DNS-based WPAD servers.  If the policy is not set or is enabled, WPAD optimization is enabled.

Independent of whether or how this policy is set, the WPAD optimization setting cannot be changed by users.</string><string id="WallpaperImage">Wallpaper image</string><string id="WallpaperImage_Explain">This policy allows you to configure the wallpaper image that is shown on the desktop and on the login screen background for the user. The policy is set by specifying the URL from which Google Chrome OS can download the wallpaper image and a cryptographic hash used to verify the integrity of the download. The image must be in JPEG format, its file size must not exceed 16MB. The URL must be accessible without any authentication.

The wallpaper image is downloaded and cached. It will be re-downloaded whenever the URL or the hash changes.

The policy should be specified as a string that expresses the URL and hash in JSON format, conforming to the following schema:
{
&quot;type&quot;: &quot;object&quot;,
&quot;properties&quot;: {
&quot;url&quot;: {
&quot;description&quot;: &quot;The URL from which the wallpaper image can be downloaded.&quot;,
&quot;type&quot;: &quot;string&quot;
},
&quot;hash&quot;: {
&quot;description&quot;: &quot;The SHA-256 hash of the wallpaper image.&quot;,
&quot;type&quot;: &quot;string&quot;
}
}
}

If this policy is set, Google Chrome OS will download and use the wallpaper image.

If you set this policy, users cannot change or override it.

If the policy is left not set, the user can choose an image to be shown on the desktop and on the login screen background.</string><string id="WebRtcUdpPortRange">Restrict the range of local UDP ports used by WebRTC</string><string id="WebRtcUdpPortRange_Explain">If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).

If the policy is not set, or if it is set to the empty string or an invalid port range, WebRTC is allowed to use any available local UDP port.</string></stringTable><presentationTable><presentation id="ShowAccessibilityOptionsInSystemTrayMenu"/><presentation id="LargeCursorEnabled"/><presentation id="SpokenFeedbackEnabled"/><presentation id="HighContrastEnabled"/><presentation id="VirtualKeyboardEnabled"/><presentation id="KeyboardDefaultToFunctionKeys"/><presentation id="ScreenMagnifierType"><dropdownList refId="ScreenMagnifierType">Set screen magnifier type</dropdownList></presentation><presentation id="DeviceLoginScreenDefaultLargeCursorEnabled"/><presentation id="DeviceLoginScreenDefaultSpokenFeedbackEnabled"/><presentation id="DeviceLoginScreenDefaultHighContrastEnabled"/><presentation id="DeviceLoginScreenDefaultVirtualKeyboardEnabled"/><presentation id="DeviceLoginScreenDefaultScreenMagnifierType"><dropdownList refId="DeviceLoginScreenDefaultScreenMagnifierType">Set the default screen magnifier type enabled on the login screen</dropdownList></presentation><presentation id="DriveDisabled"/><presentation id="DriveDisabledOverCellular"/><presentation id="RemoteAccessHostClientDomainList"><listBox refId="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</listBox></presentation><presentation id="RemoteAccessHostFirewallTraversal"/><presentation id="RemoteAccessHostDomainList"><listBox refId="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</listBox></presentation><presentation id="RemoteAccessHostTalkGadgetPrefix"><textBox refId="RemoteAccessHostTalkGadgetPrefix"><label>Configure the TalkGadget prefix for remote access hosts</label></textBox></presentation><presentation id="RemoteAccessHostRequireCurtain"/><presentation id="RemoteAccessHostAllowClientPairing"/><presentation id="RemoteAccessHostAllowGnubbyAuth"/><presentation id="RemoteAccessHostAllowRelayedConnection"/><presentation id="RemoteAccessHostUdpPortRange"><textBox refId="RemoteAccessHostUdpPortRange"><label>Restrict the UDP port range used by the remote access host</label></textBox></presentation><presentation id="RemoteAccessHostMatchUsername"/><presentation id="RemoteAccessHostTokenUrl"><textBox refId="RemoteAccessHostTokenUrl"><label>URL where remote access clients should obtain their authentication token</label></textBox></presentation><presentation id="RemoteAccessHostTokenValidationUrl"><textBox refId="RemoteAccessHostTokenValidationUrl"><label>URL for validating remote access client authentication token</label></textBox></presentation><presentation id="RemoteAccessHostTokenValidationCertificateIssuer"><textBox refId="RemoteAccessHostTokenValidationCertificateIssuer"><label>Client certificate for connecting to RemoteAccessHostTokenValidationUrl</label></textBox></presentation><presentation id="DefaultCookiesSetting"><dropdownList refId="DefaultCookiesSetting">Default cookies setting</dropdownList></presentation><presentation id="DefaultImagesSetting"><dropdownList refId="DefaultImagesSetting">Default images setting</dropdownList></presentation><presentation id="DefaultJavaScriptSetting"><dropdownList refId="DefaultJavaScriptSetting">Default JavaScript setting</dropdownList></presentation><presentation id="DefaultPluginsSetting"><dropdownList refId="DefaultPluginsSetting">Default Flash setting</dropdownList></presentation><presentation id="DefaultPopupsSetting"><dropdownList refId="DefaultPopupsSetting">Default popups setting</dropdownList></presentation><presentation id="DefaultNotificationsSetting"><dropdownList refId="DefaultNotificationsSetting">Default notification setting</dropdownList></presentation><presentation id="DefaultGeolocationSetting"><dropdownList refId="DefaultGeolocationSetting">Default geolocation setting</dropdownList></presentation><presentation id="DefaultWebBluetoothGuardSetting"><dropdownList refId="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</dropdownList></presentation><presentation id="AutoSelectCertificateForUrls"><listBox refId="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</listBox></presentation><presentation id="CookiesAllowedForUrls"><listBox refId="CookiesAllowedForUrlsDesc">Allow cookies on these sites</listBox></presentation><presentation id="CookiesBlockedForUrls"><listBox refId="CookiesBlockedForUrlsDesc">Block cookies on these sites</listBox></presentation><presentation id="CookiesSessionOnlyForUrls"><listBox refId="CookiesSessionOnlyForUrlsDesc">Allow session only cookies on these sites</listBox></presentation><presentation id="ImagesAllowedForUrls"><listBox refId="ImagesAllowedForUrlsDesc">Allow images on these sites</listBox></presentation><presentation id="ImagesBlockedForUrls"><listBox refId="ImagesBlockedForUrlsDesc">Block images on these sites</listBox></presentation><presentation id="JavaScriptAllowedForUrls"><listBox refId="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</listBox></presentation><presentation id="JavaScriptBlockedForUrls"><listBox refId="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</listBox></presentation><presentation id="PluginsAllowedForUrls"><listBox refId="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</listBox></presentation><presentation id="PluginsBlockedForUrls"><listBox refId="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</listBox></presentation><presentation id="PopupsAllowedForUrls"><listBox refId="PopupsAllowedForUrlsDesc">Allow popups on these sites</listBox></presentation><presentation id="RegisteredProtocolHandlers"><textBox refId="RegisteredProtocolHandlers"><label>Register protocol handlers</label></textBox></presentation><presentation id="PopupsBlockedForUrls"><listBox refId="PopupsBlockedForUrlsDesc">Block popups on these sites</listBox></presentation><presentation id="NotificationsAllowedForUrls"><listBox refId="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</listBox></presentation><presentation id="NotificationsBlockedForUrls"><listBox refId="NotificationsBlockedForUrlsDesc">Block notifications on these sites</listBox></presentation><presentation id="DefaultSearchProviderEnabled"/><presentation id="DefaultSearchProviderName"><textBox refId="DefaultSearchProviderName"><label>Default search provider name</label></textBox></presentation><presentation id="DefaultSearchProviderKeyword"><textBox refId="DefaultSearchProviderKeyword"><label>Default search provider keyword</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURL"><textBox refId="DefaultSearchProviderSearchURL"><label>Default search provider search URL</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURL"><textBox refId="DefaultSearchProviderSuggestURL"><label>Default search provider suggest URL</label></textBox></presentation><presentation id="DefaultSearchProviderInstantURL"><textBox refId="DefaultSearchProviderInstantURL"><label>Default search provider instant URL</label></textBox></presentation><presentation id="DefaultSearchProviderIconURL"><textBox refId="DefaultSearchProviderIconURL"><label>Default search provider icon</label></textBox></presentation><presentation id="DefaultSearchProviderEncodings"><listBox refId="DefaultSearchProviderEncodingsDesc">Default search provider encodings</listBox></presentation><presentation id="DefaultSearchProviderAlternateURLs"><listBox refId="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</listBox></presentation><presentation id="DefaultSearchProviderSearchTermsReplacementKey"><textBox refId="DefaultSearchProviderSearchTermsReplacementKey"><label>Parameter controlling search term placement for the default search provider</label></textBox></presentation><presentation id="DefaultSearchProviderImageURL"><textBox refId="DefaultSearchProviderImageURL"><label>Parameter providing search-by-image feature for the default search provider</label></textBox></presentation><presentation id="DefaultSearchProviderNewTabURL"><textBox refId="DefaultSearchProviderNewTabURL"><label>Default search provider new tab page URL</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURLPostParams"><textBox refId="DefaultSearchProviderSearchURLPostParams"><label>Parameters for search URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURLPostParams"><textBox refId="DefaultSearchProviderSuggestURLPostParams"><label>Parameters for suggest URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderInstantURLPostParams"><textBox refId="DefaultSearchProviderInstantURLPostParams"><label>Parameters for instant URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderImageURLPostParams"><textBox refId="DefaultSearchProviderImageURLPostParams"><label>Parameters for image URL which uses POST</label></textBox></presentation><presentation id="ExtensionInstallBlacklist"><listBox refId="ExtensionInstallBlacklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox></presentation><presentation id="ExtensionInstallWhitelist"><listBox refId="ExtensionInstallWhitelistDesc">Extension IDs to exempt from the blacklist</listBox></presentation><presentation id="ExtensionInstallForcelist"><listBox refId="ExtensionInstallForcelistDesc">Extension/App IDs and update URLs to be silently installed</listBox></presentation><presentation id="ExtensionInstallSources"><listBox refId="ExtensionInstallSourcesDesc">URL patterns to allow extension, app, and user script installs from</listBox></presentation><presentation id="ExtensionAllowedTypes"><listBox refId="ExtensionAllowedTypesDesc">Types of extensions/apps that are allowed to be installed</listBox></presentation><presentation id="ExtensionSettings"><textBox refId="ExtensionSettings"><label>Extension management settings</label></textBox></presentation><presentation id="EnableMediaRouter"/><presentation id="ShowCastIconInToolbar"/><presentation id="HomepageLocation"><textBox refId="HomepageLocation"><label>Home page URL</label></textBox></presentation><presentation id="HomepageIsNewTabPage"/><presentation id="NewTabPageLocation"><textBox refId="NewTabPageLocation"><label>New Tab page URL</label></textBox></presentation><presentation id="PasswordManagerEnabled"/><presentation id="AuthSchemes"><textBox refId="AuthSchemes"><label>Supported authentication schemes</label></textBox></presentation><presentation id="DisableAuthNegotiateCnameLookup"/><presentation id="EnableAuthNegotiatePort"/><presentation id="AuthServerWhitelist"><textBox refId="AuthServerWhitelist"><label>Authentication server whitelist</label></textBox></presentation><presentation id="AuthNegotiateDelegateWhitelist"><textBox refId="AuthNegotiateDelegateWhitelist"><label>Kerberos delegation server whitelist</label></textBox></presentation><presentation id="AllowCrossOriginAuthPrompt"/><presentation id="LidCloseAction"><dropdownList refId="LidCloseAction">Action to take when the user closes the lid</dropdownList></presentation><presentation id="PowerManagementUsesAudioActivity"/><presentation id="PowerManagementUsesVideoActivity"/><presentation id="PresentationScreenDimDelayScale"><decimalTextBox refId="PresentationScreenDimDelayScale">Percentage by which to scale the screen dim delay in presentation mode:</decimalTextBox></presentation><presentation id="AllowScreenWakeLocks"/><presentation id="UserActivityScreenDimDelayScale"><decimalTextBox refId="UserActivityScreenDimDelayScale">Percentage by which to scale the screen dim delay if the user becomes active after dimming:</decimalTextBox></presentation><presentation id="WaitForInitialUserActivity"/><presentation id="PowerManagementIdleSettings"><textBox refId="PowerManagementIdleSettings"><label>Power management settings when the user becomes idle</label></textBox></presentation><presentation id="ScreenLockDelays"><textBox refId="ScreenLockDelays"><label>Screen lock delays</label></textBox></presentation><presentation id="ProxyMode"><dropdownList refId="ProxyMode">Choose how to specify proxy server settings</dropdownList></presentation><presentation id="ProxyServer"><textBox refId="ProxyServer"><label>Address or URL of proxy server</label></textBox></presentation><presentation id="ProxyPacUrl"><textBox refId="ProxyPacUrl"><label>URL to a proxy .pac file</label></textBox></presentation><presentation id="ProxyBypassList"><textBox refId="ProxyBypassList"><label>Comma-separated list of proxy bypass rules</label></textBox></presentation><presentation id="QuickUnlockModeWhitelist"><listBox refId="QuickUnlockModeWhitelistDesc">Configure allowed quick unlock modes</listBox></presentation><presentation id="QuickUnlockTimeout"><dropdownList refId="QuickUnlockTimeout">Sets how often user has to enter password to use quick unlock</dropdownList></presentation><presentation id="PinUnlockMinimumLength"><decimalTextBox refId="PinUnlockMinimumLength">Sets the minimum length of the lock screen PIN:</decimalTextBox></presentation><presentation id="PinUnlockMaximumLength"><decimalTextBox refId="PinUnlockMaximumLength">Sets the maximum length of the lock screen PIN:</decimalTextBox></presentation><presentation id="PinUnlockWeakPinsAllowed"/><presentation id="AttestationEnabledForUser"/><presentation id="AttestationExtensionWhitelist"><listBox refId="AttestationExtensionWhitelistDesc">Extensions allowed to to use the remote attestation API</listBox></presentation><presentation id="RestoreOnStartup"><dropdownList refId="RestoreOnStartup">Action on startup</dropdownList></presentation><presentation id="RestoreOnStartupURLs"><listBox refId="RestoreOnStartupURLsDesc">URLs to open on startup</listBox></presentation><presentation id="AllowDeletingBrowserHistory"/><presentation id="AllowDinosaurEasterEgg"/><presentation id="AllowOutdatedPlugins"/><presentation id="AllowScreenLock"/><presentation id="AllowedDomainsForApps"><textBox refId="AllowedDomainsForApps"><label>Define domains allowed to access Google Apps</label></textBox></presentation><presentation id="AlternateErrorPagesEnabled"/><presentation id="AlwaysAuthorizePlugins"/><presentation id="ArcBackupRestoreEnabled"/><presentation id="ArcCertificatesSyncMode"><dropdownList refId="ArcCertificatesSyncMode">Set certificate availability for ARC-apps</dropdownList></presentation><presentation id="ArcEnabled"/><presentation id="ArcLocationServiceEnabled"/><presentation id="ArcPolicy"><textBox refId="ArcPolicy"><label>Configure ARC</label></textBox></presentation><presentation id="AudioCaptureAllowed"/><presentation id="AudioCaptureAllowedUrls"><listBox refId="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</listBox></presentation><presentation id="AudioOutputAllowed"/><presentation id="AutoFillEnabled"/><presentation id="AutofillCreditCardEnabled"/><presentation id="BlockThirdPartyCookies"/><presentation id="BookmarkBarEnabled"/><presentation id="CaptivePortalAuthenticationIgnoresProxy"/><presentation id="CertificateTransparencyEnforcementDisabledForUrls"><listBox refId="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</listBox></presentation><presentation id="ChromeOsLockOnIdleSuspend"/><presentation id="ChromeOsMultiProfileUserBehavior"><dropdownList refId="ChromeOsMultiProfileUserBehavior">Control the user behavior in a multiprofile session</dropdownList></presentation><presentation id="ChromeOsReleaseChannel"><dropdownList refId="ChromeOsReleaseChannel">Release channel</dropdownList></presentation><presentation id="ChromeOsReleaseChannelDelegated"/><presentation id="ComponentUpdatesEnabled"/><presentation id="DefaultPrinterSelection"><textBox refId="DefaultPrinterSelection"><label>Default printer selection rules</label></textBox></presentation><presentation id="DeveloperToolsDisabled"/><presentation id="DeviceAllowBluetooth"/><presentation id="DeviceAllowNewUsers"/><presentation id="DeviceAllowRedeemChromeOsRegistrationOffers"/><presentation id="DeviceAutoUpdateDisabled"/><presentation id="DeviceAutoUpdateP2PEnabled"/><presentation id="DeviceBlockDevmode"/><presentation id="DeviceDataRoamingEnabled"/><presentation id="DeviceEphemeralUsersEnabled"/><presentation id="DeviceGuestModeEnabled"/><presentation id="DeviceLoginScreenAppInstallList"><listBox refId="DeviceLoginScreenAppInstallListDesc">Configure the list of installed apps on the login screen</listBox></presentation><presentation id="DeviceLoginScreenInputMethods"><listBox refId="DeviceLoginScreenInputMethodsDesc">Device sign-in screen keyboard layouts</listBox></presentation><presentation id="DeviceLoginScreenLocales"><listBox refId="DeviceLoginScreenLocalesDesc">Device sign-in screen locale</listBox></presentation><presentation id="DeviceLoginScreenPowerManagement"><textBox refId="DeviceLoginScreenPowerManagement"><label>Power management on the login screen</label></textBox></presentation><presentation id="DeviceMetricsReportingEnabled"/><presentation id="DeviceNativePrinters"><textBox refId="DeviceNativePrinters"><label>Enterprise printer configuration file for devices</label></textBox></presentation><presentation id="DeviceNativePrintersAccessMode"><dropdownList refId="DeviceNativePrintersAccessMode">Device printers configuration access policy.</dropdownList></presentation><presentation id="DeviceNativePrintersBlacklist"><listBox refId="DeviceNativePrintersBlacklistDesc">Disabled enterprise device printers</listBox></presentation><presentation id="DeviceNativePrintersWhitelist"><listBox refId="DeviceNativePrintersWhitelistDesc">Enabled enterprise device printers</listBox></presentation><presentation id="DeviceOffHours"><textBox refId="DeviceOffHours"><label>Off hours intervals when device OffHours |ignored_policy_proto_tags| are released</label></textBox></presentation><presentation id="DeviceOpenNetworkConfiguration"><textBox refId="DeviceOpenNetworkConfiguration"><label>Device-level network configuration</label></textBox></presentation><presentation id="DevicePolicyRefreshRate"><decimalTextBox refId="DevicePolicyRefreshRate">Refresh rate for Device Policy:</decimalTextBox></presentation><presentation id="DeviceQuirksDownloadEnabled"/><presentation id="DeviceRebootOnShutdown"/><presentation id="DeviceShowUserNamesOnSignin"/><presentation id="DeviceStartUpFlags"><listBox refId="DeviceStartUpFlagsDesc">System wide flags to be applied on Google Chrome start-up</listBox></presentation><presentation id="DeviceTargetVersionPrefix"><textBox refId="DeviceTargetVersionPrefix"><label>Target Auto Update Version</label></textBox></presentation><presentation id="DeviceUpdateAllowedConnectionTypes"><listBox refId="DeviceUpdateAllowedConnectionTypesDesc">Connection types allowed for updates</listBox></presentation><presentation id="DeviceUpdateHttpDownloadsEnabled"/><presentation id="DeviceUpdateScatterFactor"><decimalTextBox refId="DeviceUpdateScatterFactor">Auto update scatter factor:</decimalTextBox></presentation><presentation id="DeviceUserWhitelist"><listBox refId="DeviceUserWhitelistDesc">Login user white list</listBox></presentation><presentation id="DeviceWallpaperImage"><textBox refId="DeviceWallpaperImage"><label>Device wallpaper image</label></textBox></presentation><presentation id="Disable3DAPIs"/><presentation id="DisablePluginFinder"/><presentation id="DisableSafeBrowsingProceedAnyway"/><presentation id="DisableScreenshots"/><presentation id="DisplayRotationDefault"><dropdownList refId="DisplayRotationDefault">Set default display rotation, reapplied on every reboot</dropdownList></presentation><presentation id="DownloadDirectory"><textBox refId="DownloadDirectory"><label>Set download directory</label></textBox></presentation><presentation id="DownloadRestrictions"><dropdownList refId="DownloadRestrictions">Download restrictions</dropdownList></presentation><presentation id="EasyUnlockAllowed"/><presentation id="EcryptfsMigrationStrategy"><dropdownList refId="EcryptfsMigrationStrategy">Migration strategy for ecryptfs</dropdownList></presentation><presentation id="EditBookmarksEnabled"/><presentation id="EnableCommonNameFallbackForLocalAnchors"/><presentation id="EnableDeprecatedWebPlatformFeatures"><listBox refId="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</listBox></presentation><presentation id="EnableOnlineRevocationChecks"/><presentation id="EnableSha1ForLocalAnchors"/><presentation id="ExternalStorageDisabled"/><presentation id="ExternalStorageReadOnly"/><presentation id="ForceGoogleSafeSearch"/><presentation id="ForceMaximizeOnFirstRun"/><presentation id="ForceYouTubeRestrict"><dropdownList refId="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</dropdownList></presentation><presentation id="FullscreenAllowed"/><presentation id="Http09OnNonDefaultPortsEnabled"/><presentation id="IncognitoModeAvailability"><dropdownList refId="IncognitoModeAvailability">Incognito mode availability</dropdownList></presentation><presentation id="InstantTetheringAllowed"/><presentation id="IsolateOrigins"><textBox refId="IsolateOrigins"><label>Enable Site Isolation for specified origins</label></textBox></presentation><presentation id="KeyPermissions"><textBox refId="KeyPermissions"><label>Key Permissions</label></textBox></presentation><presentation id="ManagedBookmarks"><textBox refId="ManagedBookmarks"><label>Managed Bookmarks</label></textBox></presentation><presentation id="MaxInvalidationFetchDelay"><decimalTextBox refId="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation:</decimalTextBox></presentation><presentation id="NativePrinters"><listBox refId="NativePrintersDesc">Native Printing</listBox></presentation><presentation id="NativePrintersBulkAccessMode"><dropdownList refId="NativePrintersBulkAccessMode">Printer configuration access policy.</dropdownList></presentation><presentation id="NativePrintersBulkBlacklist"><listBox refId="NativePrintersBulkBlacklistDesc">Disabled enterprise printers</listBox></presentation><presentation id="NativePrintersBulkConfiguration"><textBox refId="NativePrintersBulkConfiguration"><label>Enterprise printer configuration file</label></textBox></presentation><presentation id="NativePrintersBulkWhitelist"><listBox refId="NativePrintersBulkWhitelistDesc">Enabled enterprise printers</listBox></presentation><presentation id="NetworkPredictionOptions"><dropdownList refId="NetworkPredictionOptions">Enable network prediction</dropdownList></presentation><presentation id="NoteTakingAppsLockScreenWhitelist"><listBox refId="NoteTakingAppsLockScreenWhitelistDesc">Whitelist note-taking apps allowed on the Google Chrome OS lock screen</listBox></presentation><presentation id="OpenNetworkConfiguration"><textBox refId="OpenNetworkConfiguration"><label>User-level network configuration</label></textBox></presentation><presentation id="PacHttpsUrlStrippingEnabled"/><presentation id="PinnedLauncherApps"><listBox refId="PinnedLauncherAppsDesc">List of pinned apps to show in the launcher</listBox></presentation><presentation id="PolicyRefreshRate"><decimalTextBox refId="PolicyRefreshRate">Refresh rate for user policy:</decimalTextBox></presentation><presentation id="PrintingEnabled"/><presentation id="QuicAllowed"/><presentation id="RebootAfterUpdate"/><presentation id="RequireOnlineRevocationChecksForLocalAnchors"/><presentation id="RunAllFlashInAllowMode"/><presentation id="SAMLOfflineSigninTimeLimit"><decimalTextBox refId="SAMLOfflineSigninTimeLimit">Limit the time for which a user authenticated via SAML can log in offline:</decimalTextBox></presentation><presentation id="SSLErrorOverrideAllowed"/><presentation id="SSLVersionMax"><dropdownList refId="SSLVersionMax">Maximum SSL version enabled</dropdownList></presentation><presentation id="SafeBrowsingEnabled"/><presentation id="SafeBrowsingExtendedReportingOptInAllowed"/><presentation id="SavingBrowserHistoryDisabled"/><presentation id="SearchSuggestEnabled"/><presentation id="SessionLengthLimit"><decimalTextBox refId="SessionLengthLimit">Limit the length of a user session:</decimalTextBox></presentation><presentation id="SessionLocales"><listBox refId="SessionLocalesDesc">Set the recommended locales for a public session</listBox></presentation><presentation id="ShelfAutoHideBehavior"><dropdownList refId="ShelfAutoHideBehavior">Control shelf auto-hiding</dropdownList></presentation><presentation id="ShowHomeButton"/><presentation id="ShowLogoutButtonInTray"/><presentation id="SitePerProcess"/><presentation id="SpellCheckServiceEnabled"/><presentation id="SuppressUnsupportedOSWarning"/><presentation id="SyncDisabled"/><presentation id="SystemTimezone"><textBox refId="SystemTimezone"><label>Timezone</label></textBox></presentation><presentation id="SystemTimezoneAutomaticDetection"><dropdownList refId="SystemTimezoneAutomaticDetection">Configure the automatic timezone detection method</dropdownList></presentation><presentation id="SystemUse24HourClock"/><presentation id="TPMFirmwareUpdateSettings"><textBox refId="TPMFirmwareUpdateSettings"><label>Configure TPM firmware update behavior</label></textBox></presentation><presentation id="TaskManagerEndProcessEnabled"/><presentation id="TermsOfServiceURL"><textBox refId="TermsOfServiceURL"><label>Set the Terms of Service for a device-local account</label></textBox></presentation><presentation id="TouchVirtualKeyboardEnabled"/><presentation id="TranslateEnabled"/><presentation id="URLBlacklist"><listBox refId="URLBlacklistDesc">Block access to a list of URLs</listBox></presentation><presentation id="URLWhitelist"><listBox refId="URLWhitelistDesc">Allows access to a list of URLs</listBox></presentation><presentation id="UnifiedDesktopEnabledByDefault"/><presentation id="UsbDetachableWhitelist"><listBox refId="UsbDetachableWhitelistDesc">Whitelist of USB detachable devices</listBox></presentation><presentation id="UserAvatarImage"><textBox refId="UserAvatarImage"><label>User avatar image</label></textBox></presentation><presentation id="UserDisplayName"><textBox refId="UserDisplayName"><label>Set the display name for device-local accounts</label></textBox></presentation><presentation id="VideoCaptureAllowed"/><presentation id="VideoCaptureAllowedUrls"><listBox refId="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</listBox></presentation><presentation id="WPADQuickCheckEnabled"/><presentation id="WallpaperImage"><textBox refId="WallpaperImage"><label>Wallpaper image</label></textBox></presentation><presentation id="WebRtcUdpPortRange"><textBox refId="WebRtcUdpPortRange"><label>Restrict the range of local UDP ports used by WebRTC</label></textBox></presentation></presentationTable></resources></policyDefinitionResources>